{"version":3,"sources":["./src/app/toolbar/toolbar.component.html","./src/app/toolbar/toolbar.component.ts","./src/app/modules/material/material.module.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/doctor-dashboard/doctor-dashboard.component.html","./src/app/doctor-dashboard/doctor-dashboard.component.ts","./src/environments/environment.ts","./src/app/billing/billing.component.ts","./src/app/billing/billing.component.html","./src/app/add-edit-reservation/add-edit-reservation.component.ts","./src/app/add-edit-reservation/add-edit-reservation.component.html","./src/app/create-edit-invoice/create-edit-invoice.component.ts","./src/app/create-edit-invoice/create-edit-invoice.component.html","./src/app/services/api.service.ts","./src/app/patients/patients.component.ts","./src/app/patients/patients.component.html","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/add-edit-reservation-new/add-edit-reservation-new.component.ts","./src/app/add-edit-reservation-new/add-edit-reservation-new.component.html","./src/app/services/common.service.ts","./src/app/rewards/rewards.component.ts","./src/app/rewards/rewards.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/confirm-action/confirm-action.component.ts","./src/app/confirm-action/confirm-action.component.html","./src/app/book/book.component.html","./src/app/book/book.component.ts","./src/app/add-edit-prescription/add-edit-prescription.component.ts","./src/app/add-edit-prescription/add-edit-prescription.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/reviews/reviews.component.ts","./src/app/reviews/reviews.component.html","./src/app/contact/contact.component.html","./src/app/contact/contact.component.ts","./src/app/prescriptions/prescriptions.component.ts","./src/app/prescriptions/prescriptions.component.html","./src/app/appointments/appointments.component.ts","./src/app/appointments/appointments.component.html","./src/app/reservation-new/reservation-new.component.ts","./src/app/reservation-new/reservation-new.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/reservations/reservations.component.ts","./src/app/reservations/reservations.component.html","./src/app/container/container.component.html","./src/app/container/container.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/add-edit-patient/add-edit-patient.component.ts","./src/app/add-edit-patient/add-edit-patient.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n  <div fxFlex=\"100\" fxFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n      <div class=\"height50px padding20px toolbar\" [ngClass.xs]=\"['height45px']\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutAlign.sm=\"center center\" fxLayoutAlign.xs=\"center center\" fxLayout.xs=\"column\" fxLayout.sm=\"column\" fxLayoutGap.xs=\"20px\">\n          <div fxFlex=\"40\" fxFlex.xs=\"100\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutAlign.sm=\"center center\" fxLayoutAlign.xs=\"center center\" class=\"pointer\" fxLayoutGap=\"15px\"> <img src=\"../../assets/img/Plain Logo.png\" class=\"logo\" [ngClass.xs]=\"['logo-sm', 'mt-1']\" [ngClass.sm]=\"['logo-sm']\" alt=\"\">\n          </div>\n          <div fxFlex=\"40\" fxFlex.xs=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center flex-end\"  fxLayoutAlign.sm=\"center center\" fxLayoutAlign.xs=\"center center\">\n            <h5 class=\"bold noMargin font17px\" [ngClass.xs]=\"['break-text-sm']\">\n              HOTEL BOOKINGS FOR BUSINESS AND LEISURE TRAVELS\n            </h5>\n          </div>\n      </div>\n      <div fxFlex=\"100\" fxFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\" [ngClass.xs]=\"['height40px']\">\n        <div class=\"height50px padding20px blueBackground\" [ngClass.xs]=\"['height40px']\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutAlign.sm=\"space-between center\" fxLayoutAlign.xs=\"space-between center\">\n          <span [fxHide.lg]=\"true\" class=\"bold whiteColor\">{{ (router.url === \"/landing\" ) ? 'HOME' : router.url.replace('/', '') | uppercase }} </span>\n          <button [fxHide.lg]=\"true\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n            <mat-icon class=\"whiteColor\">menu</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button [routerLink]=\"nav.route\" *ngFor=\"let nav of navItems\" mat-menu-item>\n              <span >{{ nav.name }}</span>\n            </button>\n          </mat-menu>\n\n          <div [fxHide.sm]=\"true\" [fxHide.xs]=\"true\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"3em\">\n            <span [routerLink]=\"nav.route\" class=\"large-font bold whiteColor pointer navv-link\" *ngFor=\"let nav of navItems\" [value]=\"nav\">\n              {{nav.name}}\n            </span>\n          </div>\n        </div>\n    </div>\n  </div>\n</div>\n<div class=\"absolute bottom-zero blueBackground fullWidth height-30\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\".7rem\" fxLayoutGap.xs=\".3rem\">\n  <h2 class=\"whiteColor noMarginBottom\" [ngClass.sm]=\"['small-font']\" [ngClass.xs]=\"['break-text-sm']\">SAVE TIME! </h2>\n  <h2 class=\"whiteColor noMarginBottom\" [ngClass.sm]=\"['small-font']\" [ngClass.xs]=\"['break-text-sm']\">AVOID DISAPPOINTMENT!</h2>\n  <h2 class=\"whiteColor noMarginBottom\" [ngClass.sm]=\"['small-font']\" [ngClass.xs]=\"['break-text-sm']\">TEXT OR CALL US TODAY! </h2>\n</div>\n<a href=\"https://wa.me/27742370684\"><img class=\"absolute bottom-right\" style=\"z-index: 9999999;\" width=\"50px\" height=\"50px\" src=\"../../assets/img/app-icon.png\" alt=\"\"></a>\n\n\n<ul class=\"cb-slideshow\">\n  <li><span>Image 01</span><div></div></li>\n  <li><span>Image 02</span><div></div></li>\n  <li><span>Image 03</span><div></div></li>\n  <li><span>Image 04</span><div></div></li>\n  <li><span>Image 05</span><div></div></li>\n  <li><span>Image 06</span><div></div></li>\n</ul>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n  navItems: any[] = [\n    {\n    name: 'HOME',\n    route: ''\n  },\n  {\n    name: 'BOOK A HOTEL',\n    route: '../book'\n  },{\n    name: 'REVIEWS',\n    route: '../reviews'\n  },{\n    name: 'ABOUT US',\n    route: '../about'\n  },{\n    name: 'REWARDS',\n    route: '../rewards'\n  },{\n    name: 'CONTACT US',\n    route: '../contact'\n  },\n];\n  constructor(public router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst MaterialComponents = [\r\n  CommonModule,\r\n  MatNativeDateModule,\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatStepperModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    ...MaterialComponents\r\n  ],\r\n  exports: [\r\n    ...MaterialComponents\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-toolbar></app-toolbar>\n<div class=\"web-height\" style=\"position: relative; z-index: 2 !important;\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutAlign.sm=\"center center\"  fxLayoutAlign.lg=\"center center\">\n  <div fxFlex=\"100\" fxFlex.sm=\"400px\" fxFlex.lg=\"400px\" [ngClass.sm]=\"['width-400px']\"  fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutAlign.sm=\"center center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <mat-card style=\" background: rgba(255,255,255, 0.4) !important;\" class=\"padding10px mt-3 relative\" fxLayout=\"column\" fxLayoutAlign=\"center center\" >\n          <mat-card-content  class=\"fullWidth\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <h3 class=\"bold font20px\">About <b class=\"primaryBlue\">Bevinda Travels</b></h3>\n              <h4 class=\"font18px\">\n                <b><span class=\"primaryBlue\">Bevinda Travels</span>  was founded to serve companies and individuals who don't like to waste time online searching for hotels only to be disappointed on arrival. <br><br>\n                We have consultants who care for our client's needs for business and leisure travels. <br><br>\n                We are located in the East Rand of Johannesburg, near the OR Tambo International Airport. <br><br>\n                When it comes to caring, nothing beats the human touch.\n                So contact us and book your next hotel stay.</b>\n              </h4>\n          </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n  </div>\n</div>\n","<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n    <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <h1 class=\"bold\">Dashboard</h1>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"23\" *ngFor=\"let item of dashboardCards\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\r\n                <mat-card>\r\n                    <mat-card-content>\r\n                        <div class=\"pointer\" routerLink=\"{{ item.route }}\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\r\n                            <div class=\"height100px\" fxFlex=\"60\" fxLayout=\"column\" fxLayoutAlign=\"center center\"  fxLayoutGap=\"0.2em\">\r\n                                <mat-icon class=\"primaryBlue {{ item.color }}\"> {{ item.icon }} </mat-icon>\r\n                                <h2 class=\"bold\"> {{ item.name }} </h2>\r\n                            </div>\r\n                            <div class=\"height100px whiteColor bold {{ item.class }}\" fxFlex=\"40\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                                <span class=\"cardFont\">{{ item?.value }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n        <div class=\"marginTop1em\">\r\n            <app-patients></app-patients>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from '../services/api.service';\r\nimport { CommonService } from '../services/common.service';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-doctor-dashboard',\r\n  templateUrl: './doctor-dashboard.component.html',\r\n  styleUrls: ['./doctor-dashboard.component.scss'],\r\n})\r\nexport class DoctorDashboardComponent implements OnInit {\r\n  spinner: boolean = false;\r\n  prescriptions: any[] = [];\r\n  color: ThemePalette = 'primary';\r\n  mode: ProgressSpinnerMode = 'indeterminate';\r\n  constructor(\r\n    private common: CommonService,\r\n    private api: ApiService,\r\n    private snackbar: MatSnackBar,\r\n    private router: Router\r\n  ) {\r\n    if(!this.common.getAgent()){\r\n      this.router.navigate(['login']);\r\n    }\r\n    // this.getPrescriptionsFromAPI();\r\n    this.getClients();\r\n    // this.getAppointmentsFromAPI();\r\n    // this.getAllInvoices();\r\n  }\r\n  dashboardCards = [\r\n    {\r\n      icon: 'person',\r\n      name: 'Clients',\r\n      class: 'blueBackground',\r\n      color: 'blueColor',\r\n      value: 0,\r\n      route: '../clients',\r\n    },\r\n    {\r\n      icon: 'book_online',\r\n      name: 'Appointments',\r\n      class: 'greenBackground',\r\n      color: 'greenColor',\r\n      value: 0,\r\n      route: '../appointments',\r\n    },\r\n    {\r\n      icon: 'hotel',\r\n      name: 'Reservations',\r\n      class: 'orangeBackground',\r\n      color: 'orangeColor',\r\n      value: 0,\r\n      route: '../reservations',\r\n    },\r\n    {\r\n      icon: 'savings',\r\n      name: 'Invoices',\r\n      class: 'redBackground',\r\n      color: 'redColor',\r\n      value: 0,\r\n      route: '../invoices',\r\n    },\r\n  ];\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  getClients() {\r\n    this.spinner = true;\r\n    this.api.getClients('clients/getClients', {}).subscribe((res) => {\r\n      this.spinner = false;\r\n      this.dashboardCards[0].value = res.length;;\r\n    },\r\n    (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  getAllInvoices() {\r\n    this.spinner = true;\r\n    this.api\r\n      .getInvoices('invoices/getInvoices', {})\r\n      .subscribe(\r\n        (response) => {\r\n          this.spinner = false;\r\n          let paidInvoices = [];\r\n          if (response?.invoices?.length) {\r\n            response.invoices.filter((invoice) =>\r\n              invoice.paid == false ? paidInvoices.push(invoice) : false\r\n            );\r\n          }\r\n          this.dashboardCards[3].value = paidInvoices.length;\r\n        },\r\n        (err) => {\r\n          this.spinner = false;\r\n          console.log(err.error.msg);\r\n          this.snackbar.open(err.error.msg, 'Close', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from '../services/api.service';\r\nimport { CommonService } from '../services/common.service';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\n\r\nexport interface Invoice {\r\n  name: String,\r\n  contactNo: String,\r\n  email: String,\r\n  address: String,\r\n  additionalDetails: String,\r\n  paid: Boolean,\r\n  items: any,\r\n  doctor: String,\r\n  blob: String,\r\n  dateCreated: String,\r\n  dateCleared: String,\r\n  ref: String\r\n}\r\n@Component({\r\n  selector: 'app-billing',\r\n  templateUrl: './billing.component.html',\r\n  styleUrls: ['./billing.component.scss']\r\n})\r\nexport class BillingComponent implements OnInit {\r\n  dataSource: MatTableDataSource<Invoice>;\r\n  spinner: boolean = false;\r\n  mode: ProgressSpinnerMode = 'indeterminate';\r\n  displayedColumns: string[] = [\r\n    'client',\r\n    'dateCreated',\r\n    'dateCleared',\r\n    'amount',\r\n    'paid',\r\n    'action'\r\n  ];\r\n\r\n  // displayedColumns: string[] = ['firstname', 'lastName', 'phone', 'address', 'actions'];\r\n  invoices: Invoice[] = [  ];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('invoiceForm') invoiceForm: NgForm;\r\n  allInvoices: any[] = [];\r\n  constructor(private api: ApiService, private common: CommonService, private snackbar: MatSnackBar, private router: Router) {\r\n    if(!this.common.getAgent()){\r\n      this.router.navigate(['login']);\r\n    }\r\n    this.getAllInvoices();\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   this.dataSource.paginator = this.paginator;\r\n  //   this.dataSource.sort = this.sort;\r\n  // }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  getAllInvoices(){\r\n    this.spinner = true;\r\n    this.api\r\n          .getInvoices('invoices/getInvoices', {\r\n            'doctor': this.common.getAgent().userDetails.username,\r\n          })\r\n          .subscribe((response) => {\r\n    this.spinner = false;\r\n            if (response.invoices.length) {\r\n              this.allInvoices = response.invoices;\r\n              this.dataSource = new MatTableDataSource(this.allInvoices);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.snackbar.open(response.msg, 'Close', {\r\n                duration: 2500,\r\n                panelClass: ['greenBackground', 'whiteColor'],\r\n              });\r\n            }\r\n          }, (err) => {\r\n    this.spinner = false;\r\n            this.snackbar.open(err.error.msg, 'Close',\r\n              {\r\n                duration: 3000,\r\n                panelClass: ['redBackground', 'whiteColor'],\r\n              }\r\n            );\r\n          })\r\n  }\r\n\r\n  getTotal(row){\r\n    let total = row.items.map(item => {\r\n      return item.price * item.qty\r\n    });\r\n    return total.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  passInvoiceData(action, invoiceData){\r\n    console.log(action)\r\n    sessionStorage.setItem('invoiceID', JSON.stringify(invoiceData._id));\r\n    if(action == 'view'){\r\n      this.router.navigate(['BevindaTravels/invoices/viewInvoice']);\r\n    } else{\r\n    sessionStorage.setItem('path', JSON.stringify('edit'));\r\n      this.router.navigate(['BevindaTravels/invoices/editInvoice']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill>\r\n    <mat-progress-spinner [mode]=\"mode\">\r\n    </mat-progress-spinner>\r\n</div>\r\n<div *ngIf=\"!spinner\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n    <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <h1 class=\"bold\">Invoices</h1>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                <mat-card>\r\n                    <mat-card-content class=\"cardHeight\">\r\n                        <div class=\"padding10px\" fxLayout=\"row\" [style.height]=\"(allInvoices?.length == 0) ? '100%' : 'auto'\" fxLayoutAlign=\"space-between center\">\r\n                            <div fxFlex=\"100\" *ngIf=\"allInvoices?.length == 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                                <h1 class=\"bold\">No invoices yet</h1>\r\n                                <button routerLink=\"createInvoice\" mat-raised-button class=\"blueBackground whiteColor\"> <mat-icon class=\"font20px\">credit_card</mat-icon> Create Invoice</button>\r\n                            </div>\r\n                            <!-- <mat-form-field *ngIf=\"allInvoices?.length > 0 && !spinner\" appearance=\"legacy\"> -->\r\n                              <mat-form-field *ngIf=\"false\" appearance=\"legacy\">\r\n                                <mat-label>Select a date range</mat-label>\r\n                                <mat-date-range-input [rangePicker]=\"picker\">\r\n                                    <input matStartDate placeholder=\"Start date\">\r\n                                    <input matEndDate placeholder=\"End date\">\r\n                                </mat-date-range-input>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-date-range-picker #picker></mat-date-range-picker>\r\n                            </mat-form-field>\r\n                            <div *ngIf=\"allInvoices?.length > 0 && !spinner\" fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center end\">\r\n                                <button routerLink=\"createInvoice\" mat-raised-button class=\"blueBackground whiteColor\"> <mat-icon class=\"font20px\">credit_card</mat-icon> Create Invoice</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mat-elevation-z8\" *ngIf=\"allInvoices?.length > 0 && !spinner\">\r\n                            <table class=\"myTable fullWidth\" mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                                <!-- Client -->\r\n                                <ng-container matColumnDef=\"client\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Client</th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Date Created-->\r\n                                <ng-container matColumnDef=\"dateCreated\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Created</th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.dateCreated | date: 'medium'}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Date Cleared -->\r\n                                <ng-container matColumnDef=\"dateCleared\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Cleared</th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{ (row.dateCleared == 'N/A') ? 'Not cleared yet' : row.dateCleared | date: 'medium' }} </td>\r\n                                </ng-container>\r\n\r\n\r\n                                <!-- Amount -->\r\n                                <ng-container matColumnDef=\"amount\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{getTotal(row)}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Status -->\r\n                                <ng-container matColumnDef=\"paid\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Status</th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> <span class=\"bold\" [ngClass]=\"(row?.paid == true) ? 'greenColor ' : 'redColor'\"> <span  *ngIf=\"row.paid == true\">Paid</span> <span *ngIf=\"row.paid == false\">Unpaid</span> </span>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Action -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"5px\">\r\n                                            <mat-icon (click)=\"passInvoiceData('view', row)\" matTooltip=\"View Invoice\" class=\"pointer darkGreyColor\">visibility</mat-icon>\r\n                                            <mat-icon (click)=\"passInvoiceData('edit', row)\" matTooltip=\"Edit Invoice\" class=\"pointer primaryBlue\">edit</mat-icon>\r\n                                            <!-- <mat-icon *ngIf=\"row?.status == 'Unpaid'\" matTooltip=\"Resend Invoice\" class=\"pointer redColor\">forward_to_inbox</mat-icon> -->\r\n                                        </div>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns; let i = index\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input?.value}}\"</td>\r\n                                </tr>\r\n                            </table>\r\n\r\n                            <mat-paginator [length]=\"allInvoices?.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nimport { CommonService } from '../services/common.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-add-edit-reservation',\n  templateUrl: './add-edit-reservation.component.html',\n  styleUrls: ['./add-edit-reservation.component.scss']\n})\nexport class AddEditReservationComponent implements OnInit {\n  spinner: boolean = false;\n  showMessage: boolean = false;\n  color: ThemePalette = 'primary';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  formSaved: boolean = false;\n  agent: any = {};\n  foundPatient: boolean = false;\n  currentPatientObj: any = {};\n  clients: any[] = [];\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\n  allergies: any[] = [];\n  illnesses: any[] = [];\n  reservationForm: FormGroup;\n  constructor(\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private common: CommonService,\n    private snackbar: MatSnackBar,\n    public router: Router\n  ) {\n    if(!this.common.getAgent()){\n      this.router.navigate(['login']);\n    }\n    this.createReservationForm();\n  }\n\n  ngOnInit(): void {\n    this.agent = this.common.getAgent();\n    if (this.data) {\n      this.patchEditForm();\n      console.log(this.data);\n    }\n  }\n\n  createReservationForm() {\n    this.reservationForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      phone: [''],\n      noOfAdults: [''],\n      travelingTo: [''],\n      checkInDate: [''],\n      noOfNights: [''],\n    });\n    return this.reservationForm;\n  }\n\n\n\n  getClients() {\n    this.api.getClient('clients/getClient', {}).subscribe((res) => {\n      this.clients = res;\n    });\n  }\n\n  async refreshPatient(clientToRefresh) {\n    console.log(clientToRefresh);\n\n    this.api\n      .getClient('clients/getPatient', {\n        'personalDetails.idNumber': clientToRefresh.personalDetails.idNumber,\n      })\n      .subscribe((res) => {\n        console.log(res, 'From refresh function api');\n\n        if (res.length) {\n          this.currentPatientObj = res[0];\n          console.log(this.currentPatientObj, 'curr obj');\n        }\n      });\n  }\n\n\n  saveProgress(newClient) {\n    this.api.addClient('clients/addClient', newClient.value).subscribe(res => {\n    this.formSaved = true;\n      this.snackbar.open(\"Client Added Successfully\", 'Dismiss', {\n        duration: 3000,\n        panelClass: ['greenBackground', 'whiteColor'],\n      });\n      this.getClients();\n      this.router.navigate(['BevindaTravels/clients']);\n    },\n    (err) => {\n      this.snackbar.open(err.error, 'Dismiss', {\n        duration: 3000,\n        panelClass: ['redBackground', 'whiteColor'],\n      });\n    })\n  }\n\n\n  patchEditForm() {\n    this.reservationForm.patchValue({\n      firstName: this.data.firstName,\n      lastName: this.data.lastName,\n      phone: this.data.phone,\n      noOfAdults: this.data.noOfAdults,\n      travelingTo: this.data.travelingTo,\n      checkInDate: this.data.checkInDate,\n      noOfNights: this.data.noOfNights,\n    });\n  }\n\n  // tslint:disable-next-line: typedef\n  patchReservationForm() {\n    this.reservationForm.patchValue({\n      firstName: this.data.firstName,\n      lastName: this.data.lastName,\n      phone: this.data.phone,\n      noOfAdults: this.data.noOfAdults,\n      travelingTo: this.data.travelingTo,\n      checkInDate: this.data.checkInDate,\n      noOfNights: this.data.noOfNights,\n    });\n  }\n\n  // tslint:disable-next-line: typedef\n  checkExisitingApplication(idNum) {\n    console.log(idNum);\n    if (idNum.length === 13) {\n      this.api\n        .getClient('clients/getPatient', {\n          'personalDetails.idNumber': idNum,\n        })\n        .subscribe(\n          (response) => {\n            console.log(response);\n\n            if (response.length) {\n              this.currentPatientObj = response[0];\n              this.reservationForm.patchValue({\n                personalDetails: response[0].personalDetails,\n                healthDetails: response[0].healthDetails,\n                nextOfKinDetails: response[0].nextOfKinDetails,\n              });\n              this.snackbar.open(\n                'Patient details fetched successfully',\n                'Dismiss',\n                {\n                  duration: 3500,\n                  panelClass: ['greenBackground', 'whiteColor'],\n                }\n              );\n            } else {\n              this.snackbar.open(\n                'Patient with that ID does not exist',\n                'Dismiss',\n                {\n                  duration: 3500,\n                  panelClass: ['redBackground', 'whiteColor'],\n                }\n              );\n            }\n          },\n          (err) => {\n            this.snackbar.open(err.error, 'Dismiss', {\n              duration: 3000,\n              panelClass: ['redBackground', 'whiteColor'],\n            });\n          }\n        );\n    }\n  }\n\n  saveReservation(form){\n    this.api.addClient('bookings/addBooking', form.value).subscribe(res => {\n        this.snackbar.open(\"Booking Added Successfully\", 'Dismiss', {\n          duration: 3000,\n          panelClass: ['greenBackground', 'whiteColor'],\n        });\n        this.router.navigate(['BevindaTravels/reservations'])\n      },\n      (err) => {\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      })\n  }\n}\n","<div\n  class=\"spinner\"\n  *ngIf=\"spinner\"\n  fxLayout=\"row\"\n  fxLayoutAlign=\"center center\"\n  fxFill\n>\n  <mat-progress-spinner [mode]=\"mode\"> </mat-progress-spinner>\n</div>\n<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\n  <div\n    fxFlex=\"100\"\n    fxLayout=\"column\"\n    fxLayoutAlign=\"start stretch\"\n    fxLayoutGap=\"0.5em\"\n  >\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n        <h1 *ngIf=\"!data?.title\" class=\"bold noMargin\">New Reservation</h1>\n        <h1 *ngIf=\"data?.title\" class=\"bold noMargin\">{{ data?.title }}</h1>\n      </div>\n      <div\n        mat-dialog-close\n        class=\"pointer\"\n        fxLayout=\"row\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\"\n      >\n        <h2 *ngIf=\"data?.title\" class=\"bold redColor noMargin\">Cancel</h2>\n        <mat-icon *ngIf=\"data?.title\" class=\"redColor\">highlight_off</mat-icon>\n      </div>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div class=\"padding20px\" fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n        <mat-card>\n          <mat-card-content class=\"cardHeight\">\n            <div\n              *ngIf=\"!data?.title\"\n              class=\"padding10px\"\n              fxLayout=\"row\"\n              fxLayoutAlign=\"space-between center\"\n            >\n              <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\n                <button\n                  routerLink=\"../\"\n                  mat-raised-button\n                  class=\"primaryBlueBtn whiteColor\"\n                >\n                  <mat-icon class=\"font20px\">arrow_back</mat-icon> Back To\n                  Reservations\n                </button>\n              </div>\n            </div>\n            <form class=\"padding20px\" [formGroup]=\"reservationForm\">\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                      <mat-label>First Name</mat-label>\n                      <input matInput formControlName=\"firstName\" placeholder=\"First name\" required>\n                      <mat-error *ngIf=\"\n                          reservationForm.get('firstName')?.touched &&\n                          reservationForm.get('firstName').hasError('required')\n                        \"\n                        >First name is required!\n                      </mat-error>\n                    </mat-form-field>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                      <mat-label>Last Name</mat-label>\n                      <input matInput formControlName=\"lastName\" placeholder=\"Last name\" required>\n                      <mat-error *ngIf=\"\n                          reservationForm.get('lastName')?.touched &&\n                          reservationForm.get('lastName').hasError('required')\n                        \"\n                        >Last name is required!\n                      </mat-error>\n                    </mat-form-field>\n              </div>\n              </div>\n\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>Phone</mat-label>\n                    <input matInput formControlName=\"phone\" placeholder=\"Phone\" required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('phone')?.touched &&\n                          reservationForm.get('phone').hasError('required')\n                        \"\n                        >Phone is required!\n                      </mat-error>\n                </mat-form-field>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>Traveling To</mat-label>\n                    <input matInput formControlName=\"travelingTo\" placeholder=\"e.g Cape Town\" required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('travelingTo')?.touched &&\n                          reservationForm.get('travelingTo').hasError('required')\n                        \"\n                        >Traveling To is required!\n                      </mat-error>\n                </mat-form-field>\n                </div>\n              </div>\n\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>No. Of Nights</mat-label>\n                    <input type=\"number\" formControlName=\"noOfNights\" matInput required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('noOfNights')?.touched &&\n                          reservationForm.get('noOfNights').hasError('required')\n                        \"\n                        >No. Of Nights is required!\n                      </mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>No. Of Adults</mat-label>\n                    <input type=\"number\" formControlName=\"noOfAdults\" matInput required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('noOfAdults')?.touched &&\n                          reservationForm.get('noOfAdults').hasError('required')\n                        \"\n                        >No. Of Adults is required!\n                      </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n\n              <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>Check In Date</mat-label>\n                    <input readonly formControlName=\"checkInDate\" matInput [matDatepicker]=\"picker\" (click)=\"picker.open()\" required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('checkInDate')?.touched &&\n                          reservationForm.get('checkInDate').hasError('required')\n                        \"\n                        >Check In Date is required!\n                      </mat-error>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                  </mat-form-field>\n                </div>\n              </div>\n              <small class=\"bold\" *ngIf=\"showMessage\">Booking Submitted, An Agent will Contact You Soon!</small>\n              <div *ngIf=\"!data?.title\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n                  <button [disabled]=\"!reservationForm.valid\" [mat-dialog-close]=\"reservationForm.value\" (click)=\"saveReservation(reservationForm)\" class=\"greenBackground whiteColor\" mat-raised-button>Make Reservation</button>\n              </div>\n              <div *ngIf=\"data?.title\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n                <button [disabled]=\"!reservationForm.valid\" [mat-dialog-close]=\"reservationForm.value\" class=\"greenBackground whiteColor\" mat-raised-button>Update Reservation</button>\n            </div>\n          </form>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport { ApiService } from '../services/api.service';\r\nimport { CommonService } from '../services/common.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmActionComponent } from '../confirm-action/confirm-action.component';\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nclass Product {\r\n  name: string;\r\n  price: number;\r\n  qty: number;\r\n}\r\nclass Invoice {\r\n  customerName: string;\r\n  address: string;\r\n  contactNo: number;\r\n  email: string;\r\n  paid: boolean = false;\r\n  products: Product[] = [];\r\n  additionalDetails: string;\r\n  ref: any;\r\n  dateCleared: any;\r\n  dateCreated: any;\r\n  constructor() {\r\n\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create-edit-invoice',\r\n  templateUrl: './create-edit-invoice.component.html',\r\n  styleUrls: ['./create-edit-invoice.component.scss'],\r\n})\r\nexport class CreateEditInvoiceComponent {\r\n  invoice = new Invoice();\r\n  agent: any = {};\r\n  client: any = {};\r\n  invoices: any[] = [];\r\n  invoiceObj: any = {};\r\n  pdfLink: any = {};\r\n  spinner: boolean = false;\r\n  mode: ProgressSpinnerMode = 'indeterminate';\r\n  latestInvoice: any = {\r\n    number: 1,\r\n  };\r\n  constructor(\r\n    public router: Router,\r\n    private api: ApiService,\r\n    private common: CommonService,\r\n    private snackbar: MatSnackBar,\r\n    public sanitizer: DomSanitizer,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.agent = this.common.getAgent();\r\n    if(!this.agent){\r\n        this.router.navigate(['login']);\r\n    }\r\n    this.checkIfRouteIsCreateInvoice();\r\n    this.invoice.additionalDetails = '';\r\n    !this.router.url.includes('createInvoice') ? this.getAllInvoices() : null\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (!this.router.url.includes('editInvoice')) {\r\n      sessionStorage.clear();\r\n    }\r\n  }\r\n\r\n  checkIfRouteIsCreateInvoice() {\r\n    if (this.router.url.includes('createInvoice')) {\r\n      sessionStorage.clear();\r\n    } else if (\r\n      JSON.parse(sessionStorage.getItem('invoiceID')) === null &&\r\n      !this.router.url.includes('createInvoice')\r\n    ) {\r\n      this.router.navigate(['BevindaTravels/invoices']);\r\n    } else {\r\n      if (JSON.parse(sessionStorage.getItem('invoiceID')) !== null) {\r\n        this.getInvoiceFromDB();\r\n      }\r\n    }\r\n  }\r\n\r\n  generatePDF(action = 'open') {\r\n    let docDefinition = {\r\n      content: [\r\n        {\r\n          text: 'BEVINDA TRAVELS',\r\n          fontSize: 20,\r\n          alignment: 'center',\r\n          color: '#047886',\r\n        },\r\n        {\r\n          text: 'CLIENT INVOICE',\r\n          fontSize: 16,\r\n          bold: true,\r\n          alignment: 'center',\r\n          decoration: 'underline',\r\n          color: '#ccc',\r\n        },\r\n        {\r\n          text: 'Customer Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          columns: [\r\n            [\r\n              {\r\n                text: this.invoice?.customerName,\r\n                bold: true,\r\n              },\r\n              { text: this.invoice?.address },\r\n              { text: this.invoice?.email },\r\n              { text: this.invoice?.contactNo },\r\n            ],\r\n            [\r\n              {\r\n                text: `Cleared: ${new Date().toDateString().slice(0, 16)}`,\r\n                alignment: 'right',\r\n              },\r\n              {\r\n                text: `REF : ${this.invoice?.ref}`,\r\n                alignment: 'right',\r\n              },\r\n              {\r\n                text: `Invoice Status : Unpaid`,\r\n                alignment: 'right',\r\n                color: '#EC5646',\r\n              },\r\n            ],\r\n          ],\r\n        },\r\n        {\r\n          text: 'Invoice Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          table: {\r\n            headerRows: 1,\r\n            widths: ['*', 'auto', 'auto', 'auto'],\r\n            body: [\r\n              ['Product', 'Price', 'Quantity', 'Amount (R)'],\r\n              ...this.invoice?.products.map((p) => [\r\n                p.name,\r\n                p.price,\r\n                p.qty,\r\n                (p.price * p.qty).toFixed(2),\r\n              ]),\r\n              [\r\n                { text: 'Total Amount (R)', colSpan: 3 },\r\n                {},\r\n                {},\r\n                this.invoice?.products\r\n                  .reduce((sum, p) => sum + p.qty * p.price, 0)\r\n                  .toFixed(2),\r\n              ],\r\n            ],\r\n          },\r\n        },\r\n        {\r\n          text: 'Additional Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          text: this.invoice?.additionalDetails,\r\n          margin: [0, 0, 0, 15],\r\n        },\r\n        {\r\n          columns: [\r\n            [{ qr: `${this.invoice?.customerName}`, fit: '50' }],\r\n            [{ text: 'Signature', alignment: 'right', italics: true }],\r\n          ],\r\n        },\r\n        {\r\n          text: 'Terms and Conditions',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          ul: [\r\n            'Invoice to be cleared within 5 working days.',\r\n            'Failure to clear the invoice in the specified time will result in a 30% interest to be paid within 15 days from the day it was added',\r\n          ],\r\n        },\r\n      ],\r\n      styles: {\r\n        sectionHeader: {\r\n          bold: true,\r\n          decoration: 'underline',\r\n          fontSize: 14,\r\n          margin: [0, 15, 0, 15],\r\n        },\r\n      },\r\n    };\r\n    if (action === 'download') {\r\n      pdfMake\r\n        .createPdf(docDefinition)\r\n        .download(\r\n          `Invoice - ${this.client.firstName} ${this.client.lastName}.pdf`\r\n        );\r\n    } else if (action === 'print') {\r\n      pdfMake.createPdf(docDefinition).print();\r\n    } else {\r\n      pdfMake.createPdf(docDefinition).open();\r\n    }\r\n  }\r\n\r\n  addProduct() {\r\n    this.invoice.products.push(new Product());\r\n    console.log(this.invoice.products);\r\n  }\r\n\r\n  getClientFromAPI(phoneNumber, form) {\r\n    if (phoneNumber && phoneNumber.length === 10) {\r\n      this.api\r\n        .getAgent('clients/getClient', {\r\n          'personalDetails.clientAddress.phone': phoneNumber,\r\n        })\r\n        .subscribe(\r\n          (response) => {\r\n            if (response) {\r\n              console.log(response);\r\n\r\n              this.client = response.client[0].personalDetails;\r\n\r\n              this.invoice.customerName = `${this.client.firstName} ${this.client.lastName}`;\r\n              this.invoice.address = `${this.client.clientAddress.street}\r\n${this.client.clientAddress.city}\r\n${this.client.clientAddress.town}\r\n${this.client.clientAddress.code}`;\r\n              this.invoice.email = this.client.clientAddress.email;\r\n              this.invoice.contactNo = this.client.clientAddress.phone;\r\n              this.snackbar.open(response.msg, 'Close', {\r\n                duration: 2500,\r\n                panelClass: ['greenBackground', 'whiteColor'],\r\n              });\r\n            }\r\n          },\r\n          (err) => {\r\n             form.reset();\r\n            this.snackbar.open(err.error.msg, 'Close', {\r\n              duration: 3000,\r\n              panelClass: ['redBackground', 'whiteColor'],\r\n            });\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  downloadPDF(pdf) {\r\n    this.pdfLink = this.sanitizer.bypassSecurityTrustResourceUrl(pdf);\r\n  }\r\n\r\n  getAllInvoices() {\r\n    this.spinner = true;\r\n    this.api\r\n      .getInvoices('invoices/getInvoices', {})\r\n      .subscribe(\r\n        (response) => {\r\n          this.spinner = false;\r\n          if (response?.invoices?.length) {\r\n            this.invoices = response;\r\n            this.getLatestInvoice(response.invoices);\r\n            this.snackbar.open(response.msg, 'Close', {\r\n              duration: 2500,\r\n              panelClass: ['greenBackground', 'whiteColor'],\r\n            });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.spinner = false;\r\n          this.snackbar.open(err.error.msg, 'Close', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getLatestInvoice(invoices) {\r\n    for (let i = 0; i < invoices.length; i++) {\r\n      if (invoices[i]?.ref.split('-')[1] > this.latestInvoice) {\r\n        this.latestInvoice.number = invoices[i].ref.split('-')[1];\r\n        console.log('latest invoice', this.latestInvoice.number);\r\n      } else {\r\n        this.latestInvoice.number = 1;\r\n      }\r\n      this.latestInvoice.number++;\r\n      console.log(this.latestInvoice.number);\r\n    }\r\n  }\r\n  sendInvoice(form) {\r\n    let docDefinition = {\r\n      content: [\r\n        {\r\n          text: 'BEVINDA TRAVELS',\r\n          fontSize: 20,\r\n          alignment: 'center',\r\n          color: '#047886',\r\n        },\r\n        {\r\n          text: 'CLIENT INVOICE',\r\n          fontSize: 16,\r\n          bold: true,\r\n          alignment: 'center',\r\n          decoration: 'underline',\r\n          color: '#ccc',\r\n        },\r\n        {\r\n          text: 'Customer Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          columns: [\r\n            [\r\n              {\r\n                text: this.invoice?.customerName,\r\n                bold: true,\r\n              },\r\n              { text: this.invoice?.address },\r\n              { text: this.invoice?.email },\r\n              { text: this.invoice?.contactNo },\r\n            ],\r\n            [\r\n              {\r\n                text: `Created: ${new Date().toLocaleString().slice(0, 21)}`,\r\n                alignment: 'right',\r\n              },\r\n              {\r\n                text: `REF : ${this.invoice?.customerName} - ${this.latestInvoice?.number}`,\r\n                alignment: 'right',\r\n              },\r\n              {\r\n                text: `Invoice Status : Unpaid`,\r\n                alignment: 'right',\r\n                color: '#EC5646',\r\n              },\r\n            ],\r\n          ],\r\n        },\r\n        {\r\n          text: 'Invoice Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          table: {\r\n            headerRows: 1,\r\n            widths: ['*', 'auto', 'auto', 'auto'],\r\n            body: [\r\n              ['Product', 'Price', 'Quantity', 'Amount (R)'],\r\n              ...this.invoice?.products.map((p) => [\r\n                p.name,\r\n                p.price,\r\n                p.qty,\r\n                (p.price * p.qty).toFixed(2),\r\n              ]),\r\n              [\r\n                { text: 'Total Amount (R)', colSpan: 3 },\r\n                {},\r\n                {},\r\n                this.invoice?.products\r\n                  .reduce((sum, p) => sum + p.qty * p.price, 0)\r\n                  .toFixed(2),\r\n              ],\r\n            ],\r\n          },\r\n        },\r\n        {\r\n          text: 'Additional Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          text: this.invoice?.additionalDetails,\r\n          margin: [0, 0, 0, 15],\r\n        },\r\n        {\r\n          columns: [\r\n            [{ qr: `${this.invoice?.customerName}`, fit: '50' }],\r\n            [{ text: 'Signature', alignment: 'right', italics: true }],\r\n          ],\r\n        },\r\n        {\r\n          text: 'Terms and Conditions',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          ul: [\r\n            'Invoice to be cleared within 5 working days.',\r\n            'Failure to clear the invoice in the specified time will result in a 30% interest to be paid within 15 days from the day it was added',\r\n          ],\r\n        },\r\n      ],\r\n      styles: {\r\n        sectionHeader: {\r\n          bold: true,\r\n          decoration: 'underline',\r\n          fontSize: 14,\r\n          margin: [0, 15, 0, 15],\r\n        },\r\n      },\r\n    };\r\n    console.log(form);\r\n    pdfMake.createPdf(docDefinition).getBase64(\r\n      function (encodedString) {\r\n        let invoicetoSend = {\r\n          name: this.invoice.customerName,\r\n          contactNo: this.invoice.contactNo,\r\n          email: this.invoice.email,\r\n          address: this.invoice.address,\r\n          additionalDetails: form.additionalDetails,\r\n          paid: false,\r\n          items: this.invoice.products,\r\n          blob: `data:application/pdf;base64, ${encodedString}`,\r\n          agent: this.agent.userDetails.username,\r\n          dateCreated: new Date(),\r\n          dateCleared: 'N/A',\r\n          ref: this.invoice.customerName + ' - ' + this.latestInvoice?.number,\r\n        };\r\n        console.log(invoicetoSend);\r\n        this.saveInvoice(invoicetoSend);\r\n      }.bind(this) // To bind the callback with the actual context\r\n    );\r\n  }\r\n  removeItem(i) {\r\n    this.invoice.products.splice(i, 1);\r\n  }\r\n\r\n  saveInvoice(invoiceToSave) {\r\n    this.api.sendInvoice('invoices/sendInvoice', invoiceToSave).subscribe(\r\n      (res) => {\r\n        if (res) {\r\n          this.snackbar.open(res.msg, 'Close', {\r\n            duration: 2500,\r\n            panelClass: ['greenBackground', 'whiteColor'],\r\n          });\r\n          setTimeout(() => {\r\n            this.router.navigate(['BevindaTravels/invoices']);\r\n          }, 1500);\r\n        }\r\n      },\r\n      (err) => {\r\n        this.snackbar.open(err.error.msg, 'Close', {\r\n          duration: 2500,\r\n          panelClass: ['redBackground', 'whiteColor'],\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  getInvoiceFromDB() {\r\n    let appointmentID = JSON.parse(sessionStorage.getItem('invoiceID'));\r\n    this.api\r\n      .getInvoice('invoices/getInvoice', { _id: appointmentID })\r\n      .subscribe(\r\n        (res) => {\r\n          this.invoice = res[0];\r\n          this.invoiceObj = res[0];\r\n          if (JSON.parse(sessionStorage.getItem('path')) === 'edit') {\r\n            this.editInvoice();\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackbar.open(err.error.msg, 'Close', {\r\n            duration: 2500,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  editInvoice() {\r\n    this.router.navigate(['BevindaTravels/invoices/editInvoice']);\r\n    sessionStorage.setItem('path', JSON.stringify('edit'));\r\n    this.invoice.customerName = `${this.invoiceObj?.name}`;\r\n    this.invoice.address = `${this.invoiceObj?.address}`;\r\n    this.invoice.email = this.invoiceObj?.email;\r\n    this.invoice.contactNo = this.invoiceObj?.contactNo;\r\n    this.invoice.products = this.invoiceObj?.items;\r\n    this.invoice.ref = this.invoiceObj?.ref;\r\n  }\r\n\r\n  updateAndEmailInvoice(form) {\r\n    let dateCleared =\r\n      this.invoice.paid == true && this.invoice.dateCleared == 'N/A'\r\n        ? new Date()\r\n        : this.invoice.paid == false\r\n        ? 'N/A'\r\n        : this.invoice.dateCleared;\r\n    let dateCreated = this.invoice.dateCreated;\r\n    let color = this.invoice.paid == true ? '#74df74' : '#EC5646';\r\n    let docDefinition = {\r\n      content: [\r\n        {\r\n          text: 'BEVINDA TRAVELS',\r\n          fontSize: 20,\r\n          alignment: 'center',\r\n          color: '#047886',\r\n        },\r\n        {\r\n          text: 'CLIENT INVOICE',\r\n          fontSize: 16,\r\n          bold: true,\r\n          alignment: 'center',\r\n          decoration: 'underline',\r\n          color: '#ccc',\r\n        },\r\n        {\r\n          text: 'Customer Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          columns: [\r\n            [\r\n              {\r\n                text: this.invoice?.customerName,\r\n                bold: true,\r\n              },\r\n              { text: this.invoice?.address },\r\n              { text: this.invoice?.email },\r\n              { text: this.invoice?.contactNo },\r\n            ],\r\n            [\r\n              {\r\n                text: `Created: ${new Date(dateCreated)\r\n                  .toLocaleString()\r\n                  .slice(0, 21)}`,\r\n                alignment: 'right',\r\n              },\r\n              {\r\n                text: `Cleared: ${\r\n                  dateCleared.length == 3\r\n                    ? 'N/A'\r\n                    : typeof dateCleared == 'object' && dateCleared !== null\r\n                    ? dateCleared.toLocaleString().slice(0, 21)\r\n                    : new Date(dateCleared).toLocaleTimeString().slice(0, 16)\r\n                }`,\r\n                alignment: 'right',\r\n              },\r\n              {\r\n                text: `REF : ${this.invoice.ref}`,\r\n                alignment: 'right',\r\n              },\r\n              {\r\n                text: `Invoice Status: ${\r\n                  this.invoice.paid == true ? 'Paid' : 'Unpaid'\r\n                }`,\r\n                alignment: 'right',\r\n                color: color,\r\n                'font-weight': '600',\r\n              },\r\n            ],\r\n          ],\r\n        },\r\n        {\r\n          text: 'Invoice Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          table: {\r\n            headerRows: 1,\r\n            widths: ['*', 'auto', 'auto', 'auto'],\r\n            body: [\r\n              ['Product', 'Price', 'Quantity', 'Amount (R)'],\r\n              ...this.invoice?.products.map((p) => [\r\n                p.name,\r\n                p.price,\r\n                p.qty,\r\n                (p.price * p.qty).toFixed(2),\r\n              ]),\r\n              [\r\n                { text: 'Total Amount (R)', colSpan: 3 },\r\n                {},\r\n                {},\r\n                this.invoice?.products\r\n                  .reduce((sum, p) => sum + p.qty * p.price, 0)\r\n                  .toFixed(2),\r\n              ],\r\n            ],\r\n          },\r\n        },\r\n        {\r\n          text: 'Additional Details',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          text: this.invoice?.additionalDetails,\r\n          margin: [0, 0, 0, 15],\r\n        },\r\n        {\r\n          columns: [\r\n            [{ qr: `${this.invoice?.customerName}`, fit: '50' }],\r\n            [{ text: 'Signature', alignment: 'right', italics: true }],\r\n          ],\r\n        },\r\n        {\r\n          text: 'Terms and Conditions',\r\n          style: 'sectionHeader',\r\n        },\r\n        {\r\n          ul: [\r\n            'Invoice to be cleared within 5 working days.',\r\n            'Failure to clear the invoice in the specified time will result in a 30% interest to be paid within 15 days from the day it was added',\r\n          ],\r\n        },\r\n      ],\r\n      styles: {\r\n        sectionHeader: {\r\n          bold: true,\r\n          decoration: 'underline',\r\n          fontSize: 14,\r\n          margin: [0, 15, 0, 15],\r\n        },\r\n      },\r\n    };\r\n    pdfMake.createPdf(docDefinition).getBase64(\r\n      function (encodedString) {\r\n        let invoiceToUpdate = {\r\n          name: this.invoice.name,\r\n          contactNo: this.invoice.contactNo,\r\n          email: this.invoice.email,\r\n          address: this.invoice.address,\r\n          additionalDetails: this.invoice.additionalDetails,\r\n          paid: this.invoice.paid,\r\n          items: this.invoice.products,\r\n          blob: `data:application/pdf;base64, ${encodedString}`,\r\n          agent: this.agent.userDetails.username,\r\n          dateCreated: dateCreated,\r\n          dateCleared: dateCleared,\r\n          ref: this.invoice.ref,\r\n        };\r\n\r\n        this.updateEmailAndSaveInvoice(invoiceToUpdate);\r\n      }.bind(this) // To bind the callback with the actual context\r\n    );\r\n  }\r\n\r\n  updateEmailAndSaveInvoice(invoiceToUpdate) {\r\n    this.api\r\n      .updateInvoice(\r\n        'invoices/updateInvoice/' + this.invoiceObj._id,\r\n        invoiceToUpdate\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          if (res) {\r\n            this.snackbar.open(res.msg, 'Close', {\r\n              duration: 2500,\r\n              panelClass: ['greenBackground', 'whiteColor'],\r\n            });\r\n            setTimeout(() => {\r\n              this.router.navigate(['BevindaTravels/invoices']);\r\n            }, 1500);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackbar.open(err.error.msg, 'Close', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n  sanitizePDF(pdf): SafeUrl {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(pdf);\r\n  }\r\n\r\n  deleteInvoice() {\r\n    let msg = 'Are you sure you want to delete this invoice?';\r\n    this.dialog\r\n      .open(ConfirmActionComponent, { data: msg })\r\n      .afterClosed()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.api\r\n            .deleteInvoice('invoices/deleteInvoice/' + this.invoiceObj._id, {\r\n              _id: this.invoiceObj._id,\r\n            })\r\n            .subscribe(\r\n              (res) => {\r\n                if (res) {\r\n                  this.snackbar.open(res.msg, 'Close', {\r\n                    duration: 2500,\r\n                    panelClass: ['greenBackground', 'whiteColor'],\r\n                  });\r\n                  setTimeout(() => {\r\n                    this.router.navigate(['BevindaTravels/invoices']);\r\n                  }, 500);\r\n                }\r\n              },\r\n              (err) => {\r\n                this.snackbar.open(err.error.msg, 'Close', {\r\n                  duration: 3000,\r\n                  panelClass: ['redBackground', 'whiteColor'],\r\n                });\r\n              }\r\n            );\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill>\r\n    <mat-progress-spinner [mode]=\"mode\">\r\n    </mat-progress-spinner>\r\n</div>\r\n<div *ngIf=\"invoiceObj && !spinner\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n    <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <h1 *ngIf=\"router.url.includes('createInvoice')\" class=\"bold\">Create Invoice</h1>\r\n            <h1 *ngIf=\"router.url.includes('editInvoice')\" class=\"bold\">Edit Invoice</h1>\r\n            <h1 *ngIf=\"router.url.includes('viewInvoice')\" class=\"bold\">View Invoice</h1>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                <mat-card>\r\n                    <form>\r\n                        <mat-card-content [style.overflow-x]=\"(router.url.includes('viewInvoice')) ? 'hidden' : ''\" class=\"cardHeight\">\r\n                            <div class=\"padding10px\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                                    <button routerLink=\"../\" mat-raised-button class=\"primaryBlueBtn whiteColor\">\r\n                                        <mat-icon class=\"font20px\">arrow_back</mat-icon> Back To Invoices\r\n                                    </button>\r\n                                </div>\r\n                                <div fxLayoutGap=\"10px\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                    <a (click)=\"downloadPDF(invoiceObj?.blob)\" *ngIf=\"router.url.includes('viewInvoice')\" download=\"{{ 'Invoice - ' + invoiceObj?.name+ '.pdf' }}\" [href]=\"pdfLink\" mat-raised-button class=\"blueBackground whiteColor\">\r\n                                        <mat-icon class=\"font20px\">download</mat-icon> Download\r\n                                    </a>\r\n                                    <button *ngIf=\"router.url.includes('viewInvoice')\" type=\"submit\" mat-raised-button class=\"greyBackground whiteColor\" (click)=\"editInvoice()\">\r\n                                        <mat-icon class=\"font20px\">edit_note</mat-icon>Edit\r\n                                    </button>\r\n                                    <button *ngIf=\"router.url.includes('editInvoice') || router.url.includes('viewInvoice')\" type=\"button\" mat-raised-button class=\"redBackground whiteColor\" (click)=\"deleteInvoice()\">\r\n                                        <mat-icon class=\"font20px\">delete</mat-icon>Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                <iframe *ngIf=\"router.url.includes('viewInvoice')\" class=\"iframe\" [src]=\"sanitizePDF(invoiceObj?.blob)\">\r\n                                </iframe>\r\n                                <form *ngIf=\"router.url.includes('createInvoice') || router.url.includes('editInvoice')\" #invoiceForm=\"ngForm\">\r\n                                    <div class=\"container-fluid pt-2 mb-5\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"card border-secondary\">\r\n                                                    <div class=\"card-body\">\r\n                                                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                                            <h4 class=\"card-title\">Client Details</h4>\r\n                                                            <mat-form-field *ngIf=\"router.url.includes('createInvoice')\" appearance=\"legacy\">\r\n                                                                <mat-label>Fetch Client Phone Number</mat-label>\r\n                                                                <input required #phoneNumber matInput name=\"phoneNumber\" (keyup)=\"getClientFromAPI(phoneNumber.value, invoiceForm)\" />\r\n                                                            </mat-form-field>\r\n                                                        </div>\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-md-8\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <label for=\"name\">Name</label>\r\n                                                                    <input [disabled]=\"router.url.includes('createInvoice')\" required type=\"text\" class=\"form-control\" name=\"name\" id=\"name\" [ngClass]=\"{'is-invalid': invoiceForm.submitted && CustomerName.invalid}\" [(ngModel)]=\"invoice.customerName\" #CustomerName=\"ngModel\"\r\n                                                                        required>\r\n                                                                </div>\r\n                                                                <div class=\"form-group\">\r\n                                                                    <label for=\"address\">Address</label>\r\n                                                                    <textarea [disabled]=\"router.url.includes('createInvoice')\" required class=\"form-control\" name=\"address\" id=\"address\" row=\"3\" [ngClass]=\"{'is-invalid': invoiceForm.submitted && Address.invalid}\" [(ngModel)]=\"invoice.address\" #Address=\"ngModel\" required></textarea>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-md-4\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <label for=\"email\">Email ID</label>\r\n                                                                    <input [disabled]=\"router.url.includes('createInvoice')\" required type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" [(ngModel)]=\"invoice.email\" required>\r\n                                                                </div>\r\n                                                                <div class=\"form-group\">\r\n                                                                    <label for=\"contactNo\">Contact No.</label>\r\n                                                                    <input [disabled]=\"router.url.includes('createInvoice')\" required type=\"number\" class=\"form-control\" name=\"contactNo\" id=\"contactNo\" [ngClass]=\"{'is-invalid': invoiceForm.submitted && ContactNo.invalid}\" [(ngModel)]=\"invoice.contactNo\" #ContactNo=\"ngModel\"\r\n                                                                        required>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"card border-secondary mt-2\">\r\n                                                    <div class=\"card-body\">\r\n                                                        <h4 class=\"card-title d-flex justify-content-between\">Invoice Details\r\n                                                            <button type=\"button\" mat-raised-button class=\"primaryBlueBtn whiteColor bold\" (click)=\" addProduct()\"><mat-icon class=\"font20px\">add</mat-icon>Add Item </button>\r\n                                                        </h4>\r\n                                                        <div *ngIf=\"invoice.products.length\" class=\"row\">\r\n                                                            <table class=\"table\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th width=\"23%\">Product</th>\r\n                                                                        <th width=\"23%\">Price</th>\r\n                                                                        <th width=\"23%\">Quantity</th>\r\n                                                                        <th width=\"23%\">Amount (R)</th>\r\n                                                                        <th width=\"8%\">Delete</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    <tr *ngFor=\"let product of invoice.products; let i=index\">\r\n                                                                        <td scope=\"row\">\r\n                                                                            <input required type=\"text\" class=\"form-control\" name=\"productName{{i}}\" [ngClass]=\"{ 'is-invalid': invoiceForm.submitted && ProductName.invalid}\" [(ngModel)]=\"product.name\" #ProductName=\"ngModel\" required>\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            <input required type=\"number\" class=\"form-control\" name=\"price{{i}}\" id=\"price\" [ngClass]=\"{'is-invalid':invoiceForm.submitted&&ProductPrice.invalid}\" [(ngModel)]=\"product.price\" #ProductPrice=\"ngModel\" required>\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            <input required type=\"number\" class=\"form-control\" name=\"quantity{{i}}\" id=\"quantity\" [ngClass]=\"{ 'is-invalid': invoiceForm.submitted && ProductQty.invalid}\" [(ngModel)]=\"product.qty\" #ProductQty=\"ngModel\" required>\r\n                                                                        </td>\r\n                                                                        <td class=\"align-amount-td\">\r\n                                                                            {{product.price * product.qty || ''}}\r\n                                                                        </td>\r\n                                                                        <td class=\"align-amount-td\">\r\n                                                                            <mat-icon (click)=\"removeItem(i)\" class=\"redColor bold text-center pointer\">delete</mat-icon>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"card border-secondary mt-2\">\r\n                                                    <div class=\"card-body\">\r\n                                                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\">\r\n                                                            <h4 class=\"card-title\">Additional Details</h4>\r\n                                                            <mat-slide-toggle [fxShow]=\"(router.url.includes('editInvoice'))\" name=\"paid\" #invoice.paid [(ngModel)]=\"invoice.paid\">\r\n                                                                Invoice Paid\r\n                                                            </mat-slide-toggle>\r\n                                                        </div>\r\n                                                        <div class=\"form-group\">\r\n                                                            <textarea class=\"form-control\" name=\"additionalDetails\" rows=\"3\" [(ngModel)]=\"invoice.additionalDetails\"></textarea>\r\n                                                            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-3\" fxLayoutGap=\"10px\">\r\n                                                                <button *ngIf=\"router.url.includes('createInvoice')\" type=\"button\" [disabled]=\"!invoiceForm.valid || invoice.products?.length == 0\" mat-raised-button class=\"greyBackground whiteColor\" (click)=\"sendInvoice(invoiceForm.value)\">\r\n                                                                    <mat-icon class=\"font20px\">forward_to_inbox\r\n                                                                    </mat-icon>Email Invoice\r\n                                                                </button>\r\n                                                                <button *ngIf=\"router.url.includes('editInvoice')\" type=\"button\" [disabled]=\"!invoiceForm.valid || invoiceObj?.items?.length == 0 || !invoiceForm.dirty\" mat-raised-button class=\"greyBackground whiteColor\" (click)=\"updateAndEmailInvoice(invoiceForm.value)\">\r\n                                                                    <mat-icon class=\"font20px\">forward_to_inbox\r\n                                                                    </mat-icon>Update & Email Invoice\r\n                                                                </button>\r\n                                                                <!-- <button *ngIf=\"router.url.includes('editInvoice')\"  type=\"button\" [disabled]=\"!invoiceForm.valid || invoiceObj?.items?.length == 0\" mat-raised-button class=\"primaryBlueBtn whiteColor\" (click)=\"updateAndSaveInvoice(invoiceForm.value)\">\r\n                                                                    <mat-icon class=\"font20px\">forward_to_inbox\r\n                                                                    </mat-icon>Update & Save Invoice\r\n                                                                </button> -->\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </mat-card-content>\r\n                    </form>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  // serverUrl = 'http://localhost:3000';\r\n  serverUrl = 'https://bevinda-travels.herokuapp.com'\r\n  constructor(private http: HttpClient) { }\r\n  getAgent(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  getAllAgents(endpoint): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.get<any>(url);\r\n  }\r\n  addAgent(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  updateAgent(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  updateProfilePic(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  deleteAgent(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  loginAgent(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n\r\n  getClient(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  getClients(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  addClient(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  updateClient(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  deleteClient(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.delete<any>(url, body);\r\n  }\r\n  filterClients(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n\r\n  getPrescriptions(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  addPrescription(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  updatePrescription(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  deletePrescription(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.delete<any>(url, body);\r\n  }\r\n  getAppointments(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  addAppointment(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  updateAppointment(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  deleteAppointment(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.delete<any>(url, body);\r\n  }\r\n\r\n  getInvoices(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  getInvoice(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  sendInvoice(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  updateInvoice(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  deleteInvoice(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.delete<any>(url, body);\r\n  }\r\n\r\n  getRewards(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  getReward(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  addReward(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  updateReward(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  deleteReward(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.delete<any>(url, body);\r\n  }\r\n\r\n  getBookings(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  getBooking(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  addBooking(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  updateBooking(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  deleteBooking(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.delete<any>(url, body);\r\n  }\r\n  sendContactEmail(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n\r\n  getReservations(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  getReservation(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  addReservation(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.post<any>(url, body);\r\n  }\r\n  updateReservation(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.put<any>(url, body);\r\n  }\r\n  deleteReservation(endpoint, body): Observable<any>{\r\n    const url = `${this.serverUrl}/${endpoint}`;\r\n    return this.http.delete<any>(url, body);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../services/api.service';\r\nimport { AddEditPatientComponent } from '../add-edit-patient/add-edit-patient.component';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ConfirmActionComponent } from '../confirm-action/confirm-action.component';\r\nimport { CommonService } from '../services/common.service';\r\n\r\nexport interface Client {\r\n  personalDetails: { type: Object };\r\n  healthDetails: { type: Object };\r\n  nextOfKinDetails: { type: Object };\r\n}\r\n@Component({\r\n  selector: 'app-patients',\r\n  templateUrl: './patients.component.html',\r\n  styleUrls: ['./patients.component.scss'],\r\n})\r\nexport class PatientsComponent implements OnInit, AfterViewInit {\r\n  dataSource: MatTableDataSource<Client>;\r\n  spinner: boolean = false;\r\n  displayedColumns: string[] = [\r\n    'firstName',\r\n    'lastName',\r\n    'address',\r\n    'clientType',\r\n    'phone',\r\n    'action',\r\n  ];\r\n  mode: ProgressSpinnerMode = 'indeterminate';\r\n  // displayedColumns: string[] = ['firstname', 'lastName', 'phone', 'address', 'actions'];\r\n  clients: Client[] = [];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  filterValue = 'Corporate';\r\n  constructor(\r\n    private api: ApiService,\r\n    public router: Router,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private common: CommonService\r\n  ) {\r\n    if(!this.common.getAgent()){\r\n      this.router.navigate(['login']);\r\n    }\r\n    this.getClients();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.filterClients(this.filterValue);\r\n  }\r\n  ngAfterViewInit() {}\r\n\r\n  getClients() {\r\n    this.spinner = true;\r\n    this.api.getClients('clients/getClients', {}).subscribe((res) => {\r\n      this.spinner = false;\r\n      this.clients = res;\r\n      this.dataSource = new MatTableDataSource(this.clients);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  refreshClients() {\r\n    this.api.getClients('clients/getClients', {}).subscribe((res) => {\r\n      console.log(res, 'refreshed');\r\n    });\r\n  }\r\n  deleteClientFromDB(obj) {\r\n    console.log(obj._id);\r\n\r\n    this.dialog\r\n      .open(ConfirmActionComponent, { data: 'Delete this client?' })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.api\r\n            .deleteClient('clients/deleteClient/' + obj._id, {\r\n              _id: obj._id,\r\n            })\r\n            .subscribe(\r\n              (res) => {\r\n                this.snackbar.open(res['msg'], 'Dismiss', {\r\n                  duration: 3000,\r\n                  panelClass: ['greenBackground', 'whiteColor'],\r\n                });\r\n                this.getClients();\r\n              },\r\n              (err) => {\r\n                this.snackbar.open(err['error'], 'Dismiss', {\r\n                  duration: 3000,\r\n                  panelClass: ['redBackground', 'whiteColor'],\r\n                });\r\n              }\r\n            );\r\n        } else {\r\n          this.snackbar.open('Deletion cancelled', 'Okay', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      });\r\n  }\r\n  editClient(clientToUpdate) {\r\n    clientToUpdate['title'] = 'Edit Client';\r\n    clientToUpdate['edit'] = true;\r\n    this.dialog\r\n      .open(AddEditPatientComponent, {\r\n        data: clientToUpdate,\r\n        disableClose: true,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          res['_id'] = clientToUpdate['_id'];\r\n          this.updateClientFromAPI(res);\r\n        }\r\n      });\r\n  }\r\n  updateClientFromAPI(updatedClient) {\r\n    this.api\r\n      .updateClient(\r\n        'clients/updateClient/' + updatedClient['_id'],\r\n        updatedClient\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          this.snackbar.open(response['msg'], 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['greenBackground', 'whiteColor'],\r\n          });\r\n          this.getClients();\r\n        },\r\n        (err) => {\r\n          this.snackbar.open(err['error'], 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n  addNewClient() {\r\n    if (this.router.url.includes('home')) {\r\n      this.dialog\r\n        .open(AddEditPatientComponent, {\r\n          disableClose: true,\r\n        })\r\n        .afterClosed()\r\n        .subscribe((res) => {\r\n          console.log(res);\r\n        });\r\n    } else {\r\n      this.router.navigate(['BevindaTravels/clients/addClient']);\r\n    }\r\n  }\r\n\r\n  filterClients(ev) {\r\n    this.spinner = true;\r\n    this.filterValue = ev.value ? ev.value : this.filterValue;\r\n    this.api\r\n      .filterClients('clients/filterClients/', {\r\n        'personalDetails.clientType': this.filterValue,\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          this.clients = res;\r\n          this.spinner = false;\r\n        },\r\n        (err) => {\r\n          this.spinner = false;\r\n          this.snackbar.open(err['error'], 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill>\r\n    <mat-progress-spinner [mode]=\"mode\">\r\n    </mat-progress-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n    <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <h1 class=\"bold\">Clients</h1>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                <mat-card>\r\n                    <mat-card-content [ngClass]=\"(router.url.includes('home') ? 'patientHeightHome' : '')\" class=\"cardHeight\">\r\n                        <div class=\"padding10px\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                          <mat-form-field appearance=\"legacy\">\r\n                            <mat-label>Filter By Client Type</mat-label>\r\n                            <mat-select [(value)]=\"filterValue\" (selectionChange)=\"filterClients($event)\" matInput required>\r\n                                <mat-option value=\"Corporate\">Corporate</mat-option>\r\n                                <mat-option value=\"Private\">Private</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center end\">\r\n                                <button (click)=\"addNewClient()\" mat-raised-button class=\"primaryBlueBtn whiteColor\"> <mat-icon class=\"font20px\">person_add</mat-icon> Add Client</button>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"!clients?.length\" fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\r\n                            <h1 class=\"bold\">No results found</h1>\r\n                        </div>\r\n                        <div *ngIf=\"clients?.length\" class=\"mat-elevation-z8\">\r\n                            <table class=\"myTable fullWidth\" mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                                <!--  First Name Column -->\r\n                                <ng-container matColumnDef=\"firstName\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.personalDetails.firstName}} </td>\r\n                                </ng-container>\r\n\r\n                                <!--  Last Name Column -->\r\n                                <ng-container matColumnDef=\"lastName\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.personalDetails.lastName}} </td>\r\n                                </ng-container>\r\n\r\n\r\n                                <!-- ID Number Column -->\r\n                                <ng-container matColumnDef=\"clientType\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Client Type </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.personalDetails.clientType}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Address Column -->\r\n                                <ng-container matColumnDef=\"address\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.personalDetails.clientAddress.street}}, {{row.personalDetails.clientAddress.town}}, {{row.personalDetails.clientAddress.city}}, {{row.personalDetails.clientAddress.code}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Phone Column -->\r\n                                <ng-container matColumnDef=\"phone\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.personalDetails.clientAddress.phone}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"5px\">\r\n                                            <mat-icon (click)=\"editClient(row)\" class=\"pointer primaryBlue\">edit</mat-icon>\r\n                                            <mat-icon (click)=\"deleteClientFromDB(row)\" class=\"pointer redColor\">delete</mat-icon>\r\n                                            <!-- <mat-icon class=\"pointer orangeColor\">manage_accounts</mat-icon> -->\r\n                                        </div>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n                                </tr>\r\n                            </table>\r\n\r\n                            <mat-paginator [length]=\"clients?.length\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-toolbar></app-toolbar>\n<div class=\"web-height\" style=\"position: relative; z-index: 2 !important;\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n  <div fxFlex=\"100\"  fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <h1 class=\"whiteColor bold welcome-text\">\n            Welcome To\n          </h1>\n          <h1 class=\"bold welcome-text primaryBlue\">\n            Bevinda Travels\n          </h1>\n      </div>\n  </div>\n</div>\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nimport { CommonService } from '../services/common.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\nimport { ThemePalette } from '@angular/material/core';\n@Component({\n  selector: 'app-add-edit-reservation-new',\n  templateUrl: './add-edit-reservation-new.component.html',\n  styleUrls: ['./add-edit-reservation-new.component.scss']\n})\nexport class AddEditReservationNewComponent implements OnInit {\n  spinner: boolean = false;\n  showMessage: boolean = false;\n  color: ThemePalette = 'primary';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  formSaved: boolean = false;\n  agent: any = {};\n  foundPatient: boolean = false;\n  currentPatientObj: any = {};\n  clients: any[] = [];\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\n  allergies: any[] = [];\n  illnesses: any[] = [];\n  reservationForm: FormGroup;\n  constructor(\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private common: CommonService,\n    private snackbar: MatSnackBar,\n    public router: Router\n  ) {\n    if(!this.common.getAgent()){\n      this.router.navigate(['login']);\n    }\n    this.createReservationForm();\n  }\n\n  ngOnInit(): void {\n    this.agent = this.common.getAgent();\n    if (this.data) {\n      this.patchEditForm();\n      console.log(this.data);\n    }\n  }\n\n  createReservationForm() {\n    this.reservationForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      phone: [''],\n      noOfAdults: [''],\n      travelingTo: [''],\n      checkInDate: [''],\n      checkOutDate: [''],\n      noOfNights: [''],\n      hotel: [''],\n    });\n    return this.reservationForm;\n  }\n\n\n\n  getClients() {\n    this.api.getClient('clients/getClient', {}).subscribe((res) => {\n      this.clients = res;\n    });\n  }\n\n  async refreshPatient(clientToRefresh) {\n    console.log(clientToRefresh);\n\n    this.api\n      .getClient('clients/getPatient', {\n        'personalDetails.idNumber': clientToRefresh.personalDetails.idNumber,\n      })\n      .subscribe((res) => {\n        console.log(res, 'From refresh function api');\n\n        if (res.length) {\n          this.currentPatientObj = res[0];\n          console.log(this.currentPatientObj, 'curr obj');\n        }\n      });\n  }\n\n\n  saveProgress(newClient) {\n    this.api.addClient('clients/addClient', newClient.value).subscribe(res => {\n    this.formSaved = true;\n      this.snackbar.open(\"Client Added Successfully\", 'Dismiss', {\n        duration: 3000,\n        panelClass: ['greenBackground', 'whiteColor'],\n      });\n      this.getClients();\n      this.router.navigate(['BevindaTravels/clients']);\n    },\n    (err) => {\n      this.snackbar.open(err.error, 'Dismiss', {\n        duration: 3000,\n        panelClass: ['redBackground', 'whiteColor'],\n      });\n    })\n  }\n\n\n  patchEditForm() {\n    this.reservationForm.patchValue({\n      firstName: this.data.firstName,\n      lastName: this.data.lastName,\n      phone: this.data.phone,\n      noOfAdults: this.data.noOfAdults,\n      travelingTo: this.data.travelingTo,\n      checkInDate: this.data.checkInDate,\n      noOfNights: this.data.noOfNights,\n      checkOutDate: this.data.checkOutDate,\n      hotel: this.data.hotel,\n    });\n  }\n\n  // tslint:disable-next-line: typedef\n  patchReservationForm() {\n    this.reservationForm.patchValue({\n      firstName: this.data.firstName,\n      lastName: this.data.lastName,\n      phone: this.data.phone,\n      noOfAdults: this.data.noOfAdults,\n      travelingTo: this.data.travelingTo,\n      checkInDate: this.data.checkInDate,\n      noOfNights: this.data.noOfNights,\n      checkOutDate: this.data.checkOutDate,\n      hotel: this.data.hotel,\n    });\n  }\n\n  // tslint:disable-next-line: typedef\n  checkExisitingApplication(idNum) {\n    console.log(idNum);\n    if (idNum.length === 13) {\n      this.api\n        .getClient('clients/getPatient', {\n          'personalDetails.idNumber': idNum,\n        })\n        .subscribe(\n          (response) => {\n            console.log(response);\n\n            if (response.length) {\n              this.currentPatientObj = response[0];\n              this.reservationForm.patchValue({\n                personalDetails: response[0].personalDetails,\n                healthDetails: response[0].healthDetails,\n                nextOfKinDetails: response[0].nextOfKinDetails,\n              });\n              this.snackbar.open(\n                'Patient details fetched successfully',\n                'Dismiss',\n                {\n                  duration: 3500,\n                  panelClass: ['greenBackground', 'whiteColor'],\n                }\n              );\n            } else {\n              this.snackbar.open(\n                'Patient with that ID does not exist',\n                'Dismiss',\n                {\n                  duration: 3500,\n                  panelClass: ['redBackground', 'whiteColor'],\n                }\n              );\n            }\n          },\n          (err) => {\n            this.snackbar.open(err.error, 'Dismiss', {\n              duration: 3000,\n              panelClass: ['redBackground', 'whiteColor'],\n            });\n          }\n        );\n    }\n  }\n\n  saveReservation(form){\n    form.value.requestDate = new Date();\n    this.api.addClient('reservations/addReservation', form.value).subscribe(res => {\n        this.snackbar.open(\"Reservation Added Successfully\", 'Dismiss', {\n          duration: 3000,\n          panelClass: ['greenBackground', 'whiteColor'],\n        });\n        this.router.navigate(['BevindaTravels/reservations'])\n      },\n      (err) => {\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      })\n  }\n}\n","<div\n  class=\"spinner\"\n  *ngIf=\"spinner\"\n  fxLayout=\"row\"\n  fxLayoutAlign=\"center center\"\n  fxFill\n>\n  <mat-progress-spinner [mode]=\"mode\"> </mat-progress-spinner>\n</div>\n<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\n  <div\n    fxFlex=\"100\"\n    fxLayout=\"column\"\n    fxLayoutAlign=\"start stretch\"\n    fxLayoutGap=\"0.5em\"\n  >\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n        <h1 *ngIf=\"!data?.title\" class=\"bold noMargin\">New Reservation</h1>\n        <h1 *ngIf=\"data?.title\" class=\"bold noMargin\">{{ data?.title }}</h1>\n      </div>\n      <div\n        mat-dialog-close\n        class=\"pointer\"\n        fxLayout=\"row\"\n        fxLayoutAlign=\"space-between center\"\n        fxLayoutGap=\"10px\"\n      >\n        <h2 *ngIf=\"data?.title\" class=\"bold redColor noMargin\">Cancel</h2>\n        <mat-icon *ngIf=\"data?.title\" class=\"redColor\">highlight_off</mat-icon>\n      </div>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div class=\"padding20px\" fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n        <mat-card>\n          <mat-card-content class=\"cardHeight\">\n            <div\n              *ngIf=\"!data?.title\"\n              class=\"padding10px\"\n              fxLayout=\"row\"\n              fxLayoutAlign=\"space-between center\"\n            >\n              <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\n                <button\n                  routerLink=\"../\"\n                  mat-raised-button\n                  class=\"primaryBlueBtn whiteColor\"\n                >\n                  <mat-icon class=\"font20px\">arrow_back</mat-icon> Back To\n                  Reservations\n                </button>\n              </div>\n            </div>\n            <form class=\"padding20px\" [formGroup]=\"reservationForm\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                      <mat-label>First Name</mat-label>\n                      <input matInput formControlName=\"firstName\" placeholder=\"First name\" required>\n                      <mat-error *ngIf=\"\n                          reservationForm.get('firstName')?.touched &&\n                          reservationForm.get('firstName').hasError('required')\n                        \"\n                        >First name is required!\n                      </mat-error>\n                    </mat-form-field>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                      <mat-label>Last Name</mat-label>\n                      <input matInput formControlName=\"lastName\" placeholder=\"Last name\" required>\n                      <mat-error *ngIf=\"\n                          reservationForm.get('lastName')?.touched &&\n                          reservationForm.get('lastName').hasError('required')\n                        \"\n                        >Last name is required!\n                      </mat-error>\n                    </mat-form-field>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                  <mat-label>Phone</mat-label>\n                  <input matInput formControlName=\"phone\" placeholder=\"Phone\" required>\n                  <mat-error *ngIf=\"\n                        reservationForm.get('phone')?.touched &&\n                        reservationForm.get('phone').hasError('required')\n                      \"\n                      >Phone is required!\n                    </mat-error>\n              </mat-form-field>\n              </div>\n              </div>\n\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>Traveling To</mat-label>\n                    <input matInput formControlName=\"travelingTo\" placeholder=\"e.g Cape Town\" required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('travelingTo')?.touched &&\n                          reservationForm.get('travelingTo').hasError('required')\n                        \"\n                        >Traveling To is required!\n                      </mat-error>\n                </mat-form-field>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>Hotel</mat-label>\n                    <input type=\"text\" formControlName=\"hotel\" matInput required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('hotel')?.touched &&\n                          reservationForm.get('hotel').hasError('required')\n                        \"\n                        >Hotel is required!\n                      </mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>No. Of Nights</mat-label>\n                    <input type=\"number\" formControlName=\"noOfNights\" matInput required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('noOfNights')?.touched &&\n                          reservationForm.get('noOfNights').hasError('required')\n                        \"\n                        >No. Of Nights is required!\n                      </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\" fxFlex.xs=\"100\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>No. Of Adults</mat-label>\n                    <input type=\"number\" formControlName=\"noOfAdults\" matInput required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('noOfAdults')?.touched &&\n                          reservationForm.get('noOfAdults').hasError('required')\n                        \"\n                        >No. Of Adults is required!\n                      </mat-error>\n                  </mat-form-field>\n                </div>\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>Check In Date</mat-label>\n                    <input readonly formControlName=\"checkInDate\" matInput [matDatepicker]=\"picker\" (click)=\"picker.open()\" (click)=\"picker.open()\" required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('checkInDate')?.touched &&\n                          reservationForm.get('checkInDate').hasError('required')\n                        \"\n                        >Check In Date is required!\n                      </mat-error>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                  </mat-form-field>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"30\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>Check Out Date</mat-label>\n                    <input readonly formControlName=\"checkOutDate\" matInput [matDatepicker]=\"picker2\" (click)=\"picker2.open()\" required>\n                    <mat-error *ngIf=\"\n                          reservationForm.get('checkOutDate')?.touched &&\n                          reservationForm.get('checkOutDate').hasError('required')\n                        \"\n                        >Check Out Date is required!\n                      </mat-error>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker2></mat-datepicker>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div *ngIf=\"!data?.title\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n                  <button [disabled]=\"!reservationForm.valid\" [mat-dialog-close]=\"reservationForm.value\" (click)=\"saveReservation(reservationForm)\" class=\"greenBackground whiteColor mt-3\" mat-raised-button>Make Reservation</button>\n              </div>\n              <div *ngIf=\"data?.title\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n                <button [disabled]=\"!reservationForm.valid\" [mat-dialog-close]=\"reservationForm.value\" class=\"greenBackground whiteColor mt-3\" mat-raised-button>Update Reservation</button>\n            </div>\n          </form>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n  constructor() { }\r\n  getAgent(){\r\n    return JSON.parse(localStorage.getItem(('agent')));\r\n  }\r\n\r\n  setAgent(agent){\r\n    return localStorage.setItem('agent', JSON.stringify(agent));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rewards',\n  templateUrl: './rewards.component.html',\n  styleUrls: ['./rewards.component.scss']\n})\nexport class RewardsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-toolbar></app-toolbar>\n<div class=\"web-height\" style=\"position: relative; z-index: 2 !important;\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <mat-card class=\"padding10px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div style=\"background: url(../../assets/img/reward.jpg); height: 200px; width: 100%; background-size: cover;\"></div>\n              <h3 class=\"bold\" align=\"center\"><b class=\"primaryBlue\">Refer a friend and get 1 free night for 2 adults!\n              </b></h3>\n          </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService } from '../app/services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  doctor: any = {};\r\n  sidenavItems: any[] = [\r\n    {icon: 'home', name: 'Home', class: 'whiteColor', route: 'home'},\r\n    {icon: 'account_circle', name: 'Profile', class: 'whiteColor', route: 'profile'},\r\n    {icon: 'book_online', name: 'Appointments', class: 'whiteColor', route: 'appointments'},\r\n    {icon: 'medication', name: 'Prescriptions', class: 'whiteColor', route: 'prescriptions'},\r\n    {icon: 'savings', name: 'Invoices', class: 'whiteColor', route: 'billing'},\r\n    {icon: 'groups', name: 'Patients', class: 'whiteColor', route: 'patients'},\r\n  ];\r\n\r\n  constructor(private common: CommonService, public sanitizer: DomSanitizer, private router: Router){\r\n    this.doctor = this.common.getAgent();\r\n  }\r\n  sanitizeImg(img): SafeUrl{\r\n    return this.sanitizer.bypassSecurityTrustUrl(img);\r\n  }\r\n\r\n  logout(){\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.router.navigate(['login'])\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirm-action',\r\n  templateUrl: './confirm-action.component.html',\r\n  styleUrls: ['./confirm-action.component.scss']\r\n})\r\nexport class ConfirmActionComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"center space-between\" fxLayoutGap=\"20px\">\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n        <h3 class=\"bold\"> {{ data }}</h3>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\">\r\n        <button [mat-dialog-close]=\"true\" mat-raised-button color=\"warn\">Yes</button>\r\n        <button [mat-dialog-close]=\"false\" mat-raised-button class=\"blueBackground whiteColor\">No</button>\r\n    </div>\r\n</div>\r\n","<app-toolbar></app-toolbar>\n<div class=\"web-height\" style=\"position: relative; z-index: 2 !important;\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n  <div class=\"fullWidth\"  fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-card style=\"top: -16px !important;\" class=\"padding10px relative\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <mat-card-content  class=\"fullWidth\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <form [formGroup]=\"bookingForm\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <h3 class=\"bold\">Call, Email, WhatsApp us or book below</h3>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\".5rem\">\n              <mat-icon>phone</mat-icon> <span><a style=\"text-decoration: none;\" href=\"tel:+27 74 237 0684\">074 237 0684</a> </span>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\".5rem\">\n              <mat-icon>mail</mat-icon> <span><a style=\"text-decoration: none;\" href=\"mailto:bookings@bevindatravels.co.za\">bookings@bevindatravels.co.za</a> </span>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                    <mat-label>First Name</mat-label>\n                    <input matInput formControlName=\"firstName\" placeholder=\"First name\" required>\n                    <mat-error *ngIf=\"\n                        bookingForm.get('firstName')?.touched &&\n                        bookingForm.get('firstName').hasError('required')\n                      \"\n                      >First name is required!\n                    </mat-error>\n                  </mat-form-field>\n            </div>\n            <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                    <mat-label>Last Name</mat-label>\n                    <input matInput formControlName=\"lastName\" placeholder=\"Last name\" required>\n                    <mat-error *ngIf=\"\n                        bookingForm.get('lastName')?.touched &&\n                        bookingForm.get('lastName').hasError('required')\n                      \"\n                      >Last name is required!\n                    </mat-error>\n                  </mat-form-field>\n            </div>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                  <mat-label>Phone</mat-label>\n                  <input matInput formControlName=\"phone\" placeholder=\"Phone\" required>\n                  <mat-error *ngIf=\"\n                        bookingForm.get('phone')?.touched &&\n                        bookingForm.get('phone').hasError('required')\n                      \"\n                      >Phone is required!\n                    </mat-error>\n              </mat-form-field>\n              </div>\n\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                  <mat-label>Traveling To</mat-label>\n                  <input matInput formControlName=\"travelingTo\" placeholder=\"e.g Cape Town\" required>\n                  <mat-error *ngIf=\"\n                        bookingForm.get('travelingTo')?.touched &&\n                        bookingForm.get('travelingTo').hasError('required')\n                      \"\n                      >Traveling To is required!\n                    </mat-error>\n              </mat-form-field>\n              </div>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\"  fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                  <mat-label>No. Of Nights</mat-label>\n                  <input type=\"number\" formControlName=\"noOfNights\" matInput>\n                </mat-form-field>\n              </div>\n\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                  <mat-label>No. Of Adults</mat-label>\n                  <input type=\"number\" formControlName=\"noOfAdults\" matInput>\n                </mat-form-field>\n              </div>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                  <mat-label>Check In Date</mat-label>\n                  <input readonly formControlName=\"checkInDate\" matInput [matDatepicker]=\"picker\" (click)=\"picker.open()\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n              </div>\n            </div>\n            <small class=\"bold\" *ngIf=\"showMessage\">Booking Submitted, An Agent will Contact You Soon!</small>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n                <button [disabled]=\"!bookingForm.valid\" [mat-dialog-close]=\"bookingForm.value\" (click)=\"saveBooking(bookingForm)\" class=\"greenBackground whiteColor\" mat-raised-button>Make Booking</button>\n            </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { CommonService } from '../services/common.service';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.scss']\n})\nexport class BookComponent implements OnInit {\n  bookingForm: FormGroup;\n  showMessage: boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private common: CommonService,\n    private snackbar: MatSnackBar,\n    public router: Router\n  ) {\n    this.createBookingForm()\n   }\n\n  ngOnInit(): void {\n  }\n\n  createBookingForm() {\n    this.bookingForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      phone: [''],\n      noOfAdults: [''],\n      travelingTo: [''],\n      checkInDate: [''],\n      noOfNights: [''],\n    });\n    return this.bookingForm;\n  }\n\n  saveBooking(form){\n    form.value.requestDate = new Date();\n    this.api.addBooking('bookings/addBooking', form.value).subscribe(res => {\n        this.snackbar.open(\"Booking Added Successfully\", 'Dismiss', {\n          duration: 4000,\n          panelClass: ['greenBackground', 'whiteColor'],\n        });\n        this.showMessage = true;\n        setTimeout(() => {\n          window.location.reload();\n        }, 50000);\n      },\n      (err) => {\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      })\n  }\n}\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '../services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport { CommonService } from '../services/common.service';\r\n@Component({\r\n  selector: 'app-add-edit-prescription',\r\n  templateUrl: './add-edit-prescription.component.html',\r\n  styleUrls: ['./add-edit-prescription.component.scss'],\r\n})\r\nexport class AddEditPrescriptionComponent implements OnInit {\r\n  reward: FormGroup;\r\n  spinner: boolean = false;\r\n  currPatient: any = {};\r\n  patients: any[] = [];\r\n  illnesses: any[] = [];\r\n  showSelect: boolean = false;\r\n  color: ThemePalette = 'primary';\r\n  mode: ProgressSpinnerMode = 'indeterminate';\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private snackbar: MatSnackBar,\r\n    private common: CommonService\r\n  ) {\r\n    this.createRewardsForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getAgent();\r\n    if (this.data) {\r\n      this.patchRewardsForm();\r\n    }\r\n  }\r\n\r\n  createRewardsForm() {\r\n    this.reward = this.formBuilder.group({\r\n      referrer: [''],\r\n      friend: [''],\r\n      dateOfReferral: [''],\r\n      dateOfBooking: [''],\r\n      redeemedStatus: [false],\r\n    });\r\n  }\r\n\r\n  saveReward(reward) {\r\n    this.api.addReward('rewards/newReward', reward.value).subscribe(\r\n      (res) => {\r\n        this.snackbar.open(res.msg, 'Dismiss', {\r\n          duration: 3000,\r\n          panelClass: ['greenBackground', 'whiteColor'],\r\n        });\r\n        this.router.navigate(['BevindaTravels/rewards']);\r\n      },\r\n      (err) => {\r\n        this.snackbar.open(err.error, 'Dismiss', {\r\n          duration: 3000,\r\n          panelClass: ['redBackground', 'whiteColor'],\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  getAgent() {\r\n    this.spinner = true;\r\n    this.api.getAgent('patients/getAgent', {}).subscribe((res) => {\r\n      this.spinner = false;\r\n      if (!this.data?.patch) {\r\n        this.patients = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  patchRewardsForm() {\r\n    this.reward.patchValue({\r\n      referrer: this.data.referrer,\r\n      friend: this.data.friend,\r\n      dateOfReferral: this.data.dateOfReferral,\r\n      dateOfBooking: this.data.dateOfBooking,\r\n      redeemedStatus: this.data.redeemedStatus,\r\n    });\r\n    this.reward.get('idNumber').disable();\r\n  }\r\n\r\n  getRewardsFromAPI() {\r\n    this.spinner = true;\r\n    if (this.data?.title !== 'Edit Prescription') {\r\n      this.api\r\n        .getRewards('rewards/getRewards', {\r\n          doctor: this.common.getAgent().userDetails.username,\r\n        })\r\n        .subscribe(\r\n          (res) => {\r\n            this.patients = res.prescriptions;\r\n            this.spinner = false;\r\n            if (!this.router.url.includes('addPrescription')) {\r\n              this.snackbar.open(res.msg, 'Dismiss', {\r\n                duration: 3000,\r\n                panelClass: ['greenBackground', 'whiteColor'],\r\n              });\r\n            } else {\r\n            }\r\n          },\r\n          (err) => {\r\n            this.spinner = false;\r\n            // this.snackbar.open(err['error'], 'Dismiss', {\r\n            //   duration: 3000,\r\n            //   panelClass: ['redBackground', 'whiteColor'],\r\n            // });\r\n          }\r\n        );\r\n    }\r\n  }\r\n  getPatientFromAPI(idNum) {\r\n    if (!this.data?.patch) {\r\n      let idNumber = idNum.value.personalDetails.idNumber;\r\n      if (idNumber && idNumber.length === 13) {\r\n        console.log(idNumber);\r\n\r\n        this.api\r\n          .getAgent('patients/getPatient', {\r\n            'personalDetails.idNumber': idNumber,\r\n          })\r\n          .subscribe(\r\n            (response) => {\r\n              console.log(response);\r\n\r\n              if (response.length) {\r\n                this.reward.get('illnesses').enable();\r\n                this.reward.get('symptoms').enable();\r\n                this.reward.get('diagnosis').enable();\r\n                this.reward.get('notes').enable();\r\n                this.currPatient = response[0];\r\n                this.reward.get('illnesses').patchValue(null);\r\n                this.illnesses = response[0].healthDetails.illnesses;\r\n                this.reward.patchValue({\r\n                  idNumber: this.currPatient.personalDetails.idNumber,\r\n                });\r\n                this.snackbar.open(\r\n                  'Patient details fetched successfully',\r\n                  'Dismiss',\r\n                  {\r\n                    duration: 3500,\r\n                    panelClass: ['greenBackground', 'whiteColor'],\r\n                  }\r\n                );\r\n              }\r\n            },\r\n            (err) => {\r\n              this.snackbar.open(err.error, 'Dismiss', {\r\n                duration: 3000,\r\n                panelClass: ['redBackground', 'whiteColor'],\r\n              });\r\n            }\r\n          );\r\n      } else {\r\n        this.reward.patchValue({\r\n          idNumber: null,\r\n        });\r\n        this.reward.get('illnesses').disable();\r\n        this.reward.get('symptoms').disable();\r\n        this.reward.get('diagnosis').disable();\r\n        this.reward.get('notes').disable();\r\n        this.snackbar.open('Patient with that ID does not exist', 'Dismiss', {\r\n          duration: 3500,\r\n          panelClass: ['redBackground', 'whiteColor'],\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // resetForm() {\r\n  //   this.reward.patchValue({\r\n  //     patient: null,\r\n  //     idNumber: null,\r\n  //     symptoms: null,\r\n  //     diagnosis: null,\r\n  //     notes: null,\r\n  //     illnesses: null,\r\n  //     medication: null,\r\n  //   });\r\n  // }\r\n}\r\n","<div\r\n  class=\"spinner\"\r\n  *ngIf=\"spinner\"\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"center center\"\r\n  fxFill\r\n>\r\n  <mat-progress-spinner [mode]=\"mode\"> </mat-progress-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n  <div\r\n    fxFlex=\"100\"\r\n    fxLayout=\"column\"\r\n    fxLayoutAlign=\"start stretch\"\r\n    fxLayoutGap=\"0.5em\"\r\n  >\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n        <h1 *ngIf=\"!data?.title\" class=\"bold noMargin\">New Reward</h1>\r\n        <h1 *ngIf=\"data?.title\" class=\"bold noMargin\">{{ data?.title }}</h1>\r\n      </div>\r\n      <div\r\n        mat-dialog-close\r\n        class=\"pointer\"\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"space-between center\"\r\n        fxLayoutGap=\"10px\"\r\n      >\r\n        <h2 *ngIf=\"data?.title\" class=\"bold redColor noMargin\">Cancel</h2>\r\n        <mat-icon *ngIf=\"data?.title\" class=\"redColor\">highlight_off</mat-icon>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n        <mat-card>\r\n          <mat-card-content class=\"cardHeight\">\r\n            <div\r\n              *ngIf=\"!data?.title\"\r\n              class=\"padding10px\"\r\n              fxLayout=\"row\"\r\n              fxLayoutAlign=\"space-between center\"\r\n            >\r\n              <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                <button\r\n                  routerLink=\"../\"\r\n                  mat-raised-button\r\n                  class=\"primaryBlueBtn whiteColor\"\r\n                >\r\n                  <mat-icon class=\"font20px\">arrow_back</mat-icon> Back To\r\n                  Rewards\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <form class=\"padding10px\" [formGroup]=\"reward\">\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div\r\n                  fxFlex=\"30\"\r\n                  fxLayout=\"column\"\r\n                  fxLayoutAlign=\"start stretch\"\r\n                >\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>Referrer</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"referrer\"\r\n                      placeholder=\"Referrer\"\r\n                      required\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div\r\n                  fxFlex=\"30\"\r\n                  fxLayout=\"column\"\r\n                  fxLayoutAlign=\"start stretch\"\r\n                >\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>Friend</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"friend\"\r\n                      placeholder=\"Friend\"\r\n                      required\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div\r\n                  fxFlex=\"30\"\r\n                  fxLayout=\"column\"\r\n                  fxLayoutAlign=\"start stretch\"\r\n                >\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>Date Of Referral</mat-label>\r\n                  <input readonly formControlName=\"dateOfReferral\" matInput [matDatepicker]=\"picker\" (click)=\"picker.open()\" required>\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4em\">\r\n                <div\r\n                  fxFlex=\"30\"\r\n                  fxLayout=\"column\"\r\n                  fxLayoutAlign=\"start stretch\"\r\n                >\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>Date Of Booking</mat-label>\r\n                  <input readonly formControlName=\"dateOfBooking\" matInput [matDatepicker]=\"picker2\" (click)=\"picker2.open()\" required>\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker2></mat-datepicker>\r\n                </mat-form-field>\r\n                </div>\r\n                <div\r\n                  fxFlex=\"30\"\r\n                  fxLayout=\"column\"\r\n                  fxLayoutAlign=\"start stretch\"\r\n                >\r\n                  <mat-slide-toggle formControlName=\"redeemedStatus\"\r\n                    >Redeemed Status</mat-slide-toggle\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"mt-3\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <button\r\n                  *ngIf=\"!data?.title\"\r\n                  [disabled]=\"!reward.valid\"\r\n                  (click)=\"saveReward(reward)\"\r\n                  mat-raised-button\r\n                  class=\"blueBackground whiteColor\"\r\n                >\r\n                  Save reward\r\n                </button>\r\n                <button\r\n                  *ngIf=\"data?.title\"\r\n                  [disabled]=\"!reward.valid\"\r\n                  [mat-dialog-close]=\"reward.value\"\r\n                  mat-raised-button\r\n                  class=\"primaryBlueBtn whiteColor\"\r\n                >\r\n                  Update reward\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { CommonService } from '../services/common.service';\r\nimport { ApiService } from '../services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmActionComponent } from '../confirm-action/confirm-action.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  doctorForm: FormGroup;\r\n  address: FormGroup;\r\n  office: FormGroup;\r\n  role: FormGroup;\r\n  userDetails: FormGroup;\r\n  profilePic: any;\r\n  doctor: any = {};\r\n  spinner: boolean = false;\r\n  mode: ProgressSpinnerMode = 'indeterminate';\r\n  constructor(private formbuilder: FormBuilder,public sanitizer: DomSanitizer, private common: CommonService, private api: ApiService, private snackbar: MatSnackBar, private dialog: MatDialog, private router: Router) {\r\n    if(!this.common.getAgent()){\r\n      this.router.navigate(['login']);\r\n    }\r\n    this.createDoctorForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.doctor = this.common.getAgent();\r\n    this.patchDoctorForm();\r\n  }\r\n  createDoctorForm() {\r\n    this.userDetails = this.formbuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n    this.address = this.formbuilder.group({\r\n      street: ['', [Validators.required]],\r\n      town: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n      code: ['', [Validators.required, Validators.pattern('[0-9]*')]],\r\n      phone: ['', [Validators.required, Validators.pattern('[0-9]*'), Validators.minLength(10), Validators.maxLength(10)]],\r\n    });\r\n    this.office = this.formbuilder.group({\r\n      address: this.address\r\n    });\r\n    this.role = this.formbuilder.group({\r\n      id: ['', [Validators.required, Validators.pattern('[a-zA-Z]*')]],\r\n      specialty: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n    });\r\n    this.doctorForm = this.formbuilder.group({\r\n      firstName: ['', [Validators.required, Validators.pattern('[a-zA-Z]*')]],\r\n      lastName: ['', [Validators.required, Validators.pattern('[a-zA-Z]*')]],\r\n      role: this.role,\r\n      office: this.office,\r\n      userDetails: this.userDetails,\r\n    });\r\n  }\r\n  patchDoctorForm() {\r\n    this.doctorForm.patchValue({\r\n      firstName: this.doctor['firstName'],\r\n      lastName: this.doctor['lastName'],\r\n      office: this.doctor['office'],\r\n      role: this.doctor['role'],\r\n      userDetails: this.doctor['userDetails'],\r\n    });\r\n  }\r\n\r\n  // getAgentFromAPI(){\r\n  //   this.api.getAgent('doctors/getAgent', {\"userDetails.username\": this.doctor.userDetails.username}).subscribe(res => {\r\n  //   localStorage.setItem('doctor', JSON.stringify(res[0]));\r\n  //   this.doctor = res[0];\r\n  //   this.spinner = false;\r\n  //   window.location.reload();\r\n  //   },  (err) => {\r\n  //     this.spinner = false;\r\n  //     this.snackbar.open(err.error.msg, 'Close', {\r\n  //       duration: 3000,\r\n  //       panelClass: ['redBackground', 'whiteColor'],\r\n  //     });\r\n  //   });\r\n  // }\r\n  updateAgent(form){\r\n    this.spinner = true;\r\n    this.dialog.open(ConfirmActionComponent, {data: 'Are you sure you want to update your details?'}).afterClosed().subscribe(res => {\r\n      if(res){\r\n        console.log(res)\r\n        form._id = this.doctor._id;\r\n        this.saveUpdatedAgent(form);\r\n      }\r\n    })\r\n\r\n  }\r\n  sanitizeImg(img): SafeUrl{\r\n    return this.sanitizer.bypassSecurityTrustUrl(img);\r\n  }\r\n\r\n  saveUpdatedAgent(updatedAgent){\r\n    console.log(updatedAgent)\r\n    this.api.updateAgent('agents/updateAgent/' + updatedAgent._id, updatedAgent).subscribe(res => {\r\n      this.snackbar.open(res.msg, 'Close', {\r\n        duration: 2500,\r\n        panelClass: ['greenBackground', 'whiteColor'],\r\n      });\r\n      this.common.setAgent(res.doc);\r\n      this.common.getAgent();\r\n    },\r\n    (err) => {\r\n      this.spinner = false;\r\n      this.snackbar.open(err.msg, 'Close', {\r\n        duration: 3000,\r\n        panelClass: ['redBackground', 'whiteColor'],\r\n      });\r\n    });\r\n  }\r\n  changeListener($event) : void {\r\n    this.readThis($event.target);\r\n  }\r\n\r\n  readThis(inputValue: any): void {\r\n    let file:File = inputValue.files[0];\r\n    let myReader:FileReader = new FileReader();\r\n\r\n    myReader.onloadend = (e) => {\r\n      this.doctor.profilePic = myReader.result;\r\n      console.log(myReader.result);\r\n      // localStorage.setItem('doctor', JSON.stringify(this.doctor));\r\n      this.sanitizeImg(this.doctor.profilePic);\r\n    }\r\n    myReader.readAsDataURL(file);\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n    <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <h1 class=\"bold\">Profile</h1>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                <mat-card>\r\n                    <mat-card-content class=\"cardHeight padding20px\" style=\"overflow-y: hidden !important;\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"10px\">\r\n                            <div fxFlex=\"48\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\r\n                                <h1 class=\"bold primaryBlue\">Edit Profile\r\n                                </h1>\r\n                                <img width=\"100%\" src=\"assets/img/edit2.png\" alt=\"\">\r\n                            </div>\r\n                            <div fxFlex=\"50\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\r\n                                <div>\r\n                                    <form [formGroup]=\"doctorForm\">\r\n\r\n                                        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                                <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                    <mat-label>First Name</mat-label>\r\n                                                    <input readonly matInput type=\"text\" formControlName=\"firstName\" placeholder=\"First name\" required>\r\n                                                    <mat-error *ngIf=\"\r\n                                                    doctorForm.get('firstName').touched &&\r\n                                                    doctorForm.get('firstName').hasError('required')\r\n                                                  \"\r\n                                                  >First name is required!\r\n                                                </mat-error>\r\n                                                <mat-error *ngIf=\"\r\n                                                    doctorForm.get('firstName').touched\r\n                                                    && doctorForm.get('firstName').hasError('pattern')\"\r\n                                                  >First name should only contain letters!\r\n                                                </mat-error>\r\n                                                </mat-form-field>\r\n\r\n                                                <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                    <mat-label>Last Name</mat-label>\r\n                                                    <input readonly matInput type=\"text\" formControlName=\"lastName\" placeholder=\"Last name\" required>\r\n                                                    <mat-error *ngIf=\"\r\n                                                    doctorForm.get('lastName').touched &&\r\n                                                    doctorForm.get('lastName').hasError('required')\r\n                                                  \"\r\n                                                  >Last name is required!\r\n                                                </mat-error>\r\n                                                <mat-error *ngIf=\"\r\n                                                    doctorForm.get('lastName').touched\r\n                                                    && doctorForm.get('lastName').hasError('pattern')\"\r\n                                                  >Last name should only contain letters!\r\n                                                </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n\r\n                                            <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" [formGroup]=\"office\">\r\n                                                <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" [formGroup]=\"address\">\r\n                                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                                        <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                            <mat-label>Street</mat-label>\r\n                                                            <input matInput type=\"text\" formControlName=\"street\" placeholder=\"Street\" required>\r\n                                                            <mat-error *ngIf=\"\r\n                                                            address.get('street').touched\r\n                                                            && address.get('street').hasError('pattern')\"\r\n                                                          >Street address is required!\r\n                                                        </mat-error>\r\n                                                        </mat-form-field>\r\n\r\n                                                        <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                            <mat-label>Town</mat-label>\r\n                                                            <input matInput type=\"text\" formControlName=\"town\" placeholder=\"Town\" required>\r\n                                                            <mat-error *ngIf=\"\r\n                                                            address.get('town').touched &&\r\n                                                            address.get('town').hasError('required')\r\n                                                          \"\r\n                                                          >Town is required!\r\n                                                        </mat-error>\r\n                                                        <mat-error *ngIf=\"\r\n                                                            address.get('town').touched\r\n                                                            && address.get('town').hasError('pattern')\"\r\n                                                          >Town should only contain letters!\r\n                                                        </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n\r\n                                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                                        <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                            <mat-label>Code</mat-label>\r\n                                                            <input matInput type=\"text\" maxlength=\"4\" formControlName=\"code\" placeholder=\"Code\" required>\r\n                                                            <mat-error *ngIf=\"\r\n                                                            address.get('code').touched &&\r\n                                                            address.get('code').hasError('required')\r\n                                                          \"\r\n                                                          >Code is required!\r\n                                                        </mat-error>\r\n                                                        <mat-error *ngIf=\"\r\n                                                            address.get('code').touched\r\n                                                            && address.get('code').hasError('pattern')\"\r\n                                                          >Code should only contain numbers!\r\n                                                        </mat-error>\r\n                                                        </mat-form-field>\r\n\r\n                                                        <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                            <mat-label>Phone</mat-label>\r\n                                                            <input matInput type=\"text\" formControlName=\"phone\" minlength=\"10\"  maxlength=\"10\" placeholder=\"Phone in the form 07864134480\" required>\r\n                                                            <mat-error *ngIf=\"\r\n                                                            address.get('phone').touched &&\r\n                                                            address.get('phone').hasError('required')\r\n                                                          \"\r\n                                                          >Phone is required!\r\n                                                        </mat-error>\r\n                                                        <mat-error *ngIf=\"\r\n                                                            address.get('phone').touched\r\n                                                            && address.get('phone').hasError('pattern')\"\r\n                                                          >Phone should only contain numbers!\r\n                                                        </mat-error>\r\n                                                        <mat-error *ngIf=\"\r\n                                                            address.get('phone').touched\r\n                                                            && address.get('phone').hasError('minlength')\"\r\n                                                          >Phone should contain exactly 10 numbers!\r\n                                                        </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div [style.margin-top]=\"((address.get('phone').touched\r\n                                        && address.get('phone').hasError('pattern'))) ? '1em !important' : ''\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" [formGroup]=\"role\">\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                                <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                    <mat-label>Role ID</mat-label>\r\n                                                    <input readonly matInput type=\"text\" formControlName=\"id\" placeholder=\"Role ID\" required>\r\n                                                     <mat-error *ngIf=\"\r\n                                                    role.get('id').touched &&\r\n                                                    role.get('id').hasError('required')\r\n                                                  \"\r\n                                                  >Role ID is required!\r\n                                                </mat-error>\r\n                                                <mat-error *ngIf=\"\r\n                                                    role.get('id').touched\r\n                                                    && role.get('id').hasError('pattern')\"\r\n                                                  >Role ID should only contain letters!\r\n                                                </mat-error>\r\n                                                </mat-form-field>\r\n\r\n                                                <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                    <mat-label>Specialty</mat-label>\r\n                                                    <input readonly matInput type=\"text\" formControlName=\"specialty\" placeholder=\"Specialty\" required>\r\n                                                     <mat-error *ngIf=\"\r\n                                                    role.get('specialty').touched &&\r\n                                                    role.get('specialty').hasError('required')\r\n                                                  \"\r\n                                                  >Specialty is required!\r\n                                                </mat-error>\r\n                                                <mat-error *ngIf=\"\r\n                                                    role.get('specialty').touched\r\n                                                    && role.get('specialty').hasError('pattern')\"\r\n                                                  >Specialty should only contain letters!\r\n                                                </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" [formGroup]=\"userDetails\">\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                                <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                    <mat-label>Email</mat-label>\r\n                                                    <input readonly matInput type=\"text\" formControlName=\"email\" placeholder=\"Email\" required>\r\n                                                     <mat-error *ngIf=\"\r\n                                                    userDetails.get('email').touched &&\r\n                                                    userDetails.get('email').hasError('required')\r\n                                                  \"\r\n                                                  >Email is required!\r\n                                                </mat-error>\r\n                                                <mat-error *ngIf=\"\r\n                                                    userDetails.get('email').touched\r\n                                                    && userDetails.get('email').hasError('email')\"\r\n                                                  >Email format incorrect!\r\n                                                </mat-error>\r\n                                                </mat-form-field>\r\n\r\n                                                <mat-form-field fxFlex=\"48\" appearance=\"legacy\">\r\n                                                    <mat-label>Password</mat-label>\r\n                                                    <input matInput readonly type=\"password\" minlength=\"8\" formControlName=\"password\" placeholder=\"Password\" required>\r\n                                                     <mat-error *ngIf=\"\r\n                                                    userDetails.get('password').touched &&\r\n                                                    userDetails.get('password').hasError('required')\r\n                                                  \"\r\n                                                  >Password is required!\r\n                                                </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <button [disabled]=\"!doctorForm.valid\" (click)=\"updateAgent(doctorForm.value)\" mat-raised-button class=\"primaryBlueBtn whiteColor\">Update</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './modules/material/material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DoctorDashboardComponent } from './doctor-dashboard/doctor-dashboard.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { AppointmentsComponent } from './appointments/appointments.component';\r\nimport { PrescriptionsComponent } from './prescriptions/prescriptions.component';\r\nimport { BillingComponent } from './billing/billing.component';\r\nimport { PatientsComponent } from './patients/patients.component';\r\nimport { AddEditPatientComponent } from './add-edit-patient/add-edit-patient.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AddEditPrescriptionComponent } from './add-edit-prescription/add-edit-prescription.component';\r\nimport { CreateEditInvoiceComponent } from './create-edit-invoice/create-edit-invoice.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ContainerComponent } from './container/container.component';\r\nimport { ConfirmActionComponent } from './confirm-action/confirm-action.component';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { LandingComponent } from './landing/landing.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\nimport { AboutComponent } from './about/about.component';\nimport { RewardsComponent } from './rewards/rewards.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { BookComponent } from './book/book.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { ReservationsComponent } from './reservations/reservations.component';\nimport { AddEditReservationComponent } from './add-edit-reservation/add-edit-reservation.component';\nimport { AddEditReservationNewComponent } from './add-edit-reservation-new/add-edit-reservation-new.component';\nimport { ReservationNewComponent } from './reservation-new/reservation-new.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DoctorDashboardComponent,\r\n    ProfileComponent,\r\n    AppointmentsComponent,\r\n    PrescriptionsComponent,\r\n    BillingComponent,\r\n    PatientsComponent,\r\n    AddEditPatientComponent,\r\n    AddEditPrescriptionComponent,\r\n    CreateEditInvoiceComponent,\r\n    NotFoundComponent,\r\n    ContainerComponent,\r\n    ConfirmActionComponent,\r\n    LandingComponent,\r\n    ReviewsComponent,\r\n    AboutComponent,\r\n    RewardsComponent,\r\n    ContactComponent,\r\n    BookComponent,\r\n    ToolbarComponent,\r\n    ReservationsComponent,\r\n    AddEditReservationComponent,\r\n    AddEditReservationNewComponent,\r\n    ReservationNewComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory,\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.scss'],\n})\nexport class ReviewsComponent implements OnInit {\n  reviews = [\n    {\n      text: 'I made a last minute trip to Durban, Mandla managed to book a hotel for me.',\n      name: 'Anonymous',\n    },\n    {\n      text: 'My wife and I booked a weekend getaway to Hartes and the service was excellent. ',\n      name: 'Zama',\n    },\n    {\n      text: 'I travel a lot for business and Charles always has my back. ',\n      name: 'Dr. Mdluli',\n    },\n    {\n      text: 'We traveled to Cape Town for our anniversary and we got a sea view room in Camps Bay. ',\n      name: 'Tracey',\n    },\n    {\n      text: 'We booked our honeymoon to Zanzibar and it was magical. ',\n      name: 'Anonymous',\n    },\n  ];\n  activeReview: any;\n\n  constructor() {}\n\n  showReview(i){\n    this.activeReview = this.reviews[i];\n  }\n  ngOnInit(): void {\n    this.showReview(0);\n  }\n}\n","<app-toolbar></app-toolbar>\n<div class=\"web-height\" style=\"position: relative; z-index: 2 !important;\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n  <div fxFlex=\"100\"  fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"container\">\n          <div class=\"testimonial-box\">\n            <div class=\"testimonial\">\n              <i class=\"fas fa-quote-right\"></i>\n              <span class=\"testimonial-text bold\">&#8220;{{ activeReview.text }}&#8221;</span>\n              <div class=\"user-info\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <span class=\"user-name bold\">{{ activeReview.name }}</span>\n                <div class=\"user-job-details\">\n                  <span class=\"user-job\">Past Client</span>\n                </div>\n                <div class=\"page\">\n                  <button mat-button (click)=\"showReview(0)\">1</button>\n                  <button mat-button (click)=\"showReview(1)\">2</button>\n                  <button mat-button (click)=\"showReview(2)\">3</button> <br>\n                  <button mat-button (click)=\"showReview(3)\">4</button>\n                  <button mat-button (click)=\"showReview(4)\">5</button>\n                </div>\n              </div>\n              <div class=\"testimonial-user\">\n                <!-- <img src=\"../../assets/img/star.jpg\" alt=\"user-img\" class=\"user-img\"> -->\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n","<app-toolbar></app-toolbar>\n<div class=\"web-height\" style=\"position: relative; z-index: 2 !important;\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n  <div class=\"fullWidth\"  fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-card class=\"padding10px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <mat-card-content  class=\"fullWidth\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <form [formGroup]=\"bookingForm\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <h3 class=\"bold\">Call, Email, WhatsApp us or write below</h3>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\".5rem\">\n              <mat-icon>phone</mat-icon> <span><a style=\"text-decoration: none;\" href=\"tel:+27 74 237 0684\">074 237 0684</a> </span>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\".5rem\">\n              <mat-icon>mail</mat-icon> <span><a style=\"text-decoration: none;\" href=\"mailto:info@bevindatravels.co.za\">info@bevindatravels.co.za</a> </span>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                    <mat-label>First Name</mat-label>\n                    <input matInput formControlName=\"firstName\" placeholder=\"First name\" required>\n                    <mat-error *ngIf=\"\n                        bookingForm.get('firstName')?.touched &&\n                        bookingForm.get('firstName').hasError('required')\n                      \"\n                      >First name is required!\n                    </mat-error>\n                  </mat-form-field>\n            </div>\n            <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                    <mat-label>Last Name</mat-label>\n                    <input matInput formControlName=\"lastName\" placeholder=\"Last name\" required>\n                    <mat-error *ngIf=\"\n                        bookingForm.get('lastName')?.touched &&\n                        bookingForm.get('lastName').hasError('required')\n                      \"\n                      >Last name is required!\n                    </mat-error>\n                  </mat-form-field>\n            </div>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayout.xs=\"column\" fxLayoutAlign.xs=\"start stretch\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                  <mat-label>Phone</mat-label>\n                  <input matInput formControlName=\"phone\" placeholder=\"Phone\" required>\n                  <mat-error *ngIf=\"\n                        bookingForm.get('phone')?.touched &&\n                        bookingForm.get('phone').hasError('required')\n                      \"\n                      >Phone is required!\n                    </mat-error>\n              </mat-form-field>\n              </div>\n\n              <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"47\" fxFlex.xs=\"100\">\n                <mat-form-field appearance=\"legacy\">\n                  <mat-label>Email</mat-label>\n                  <input matInput formControlName=\"email\" placeholder=\"Email\">\n              </mat-form-field>\n              </div>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n              <mat-form-field class=\"fullWidth\" appearance=\"legacy\">\n                <mat-label>Message</mat-label>\n                <textarea formControlName=\"message\" matInput placeholder=\"Message\"></textarea>\n                <mat-error *ngIf=\"\n                bookingForm.get('message')?.touched &&\n                bookingForm.get('message').hasError('required')\n              \"\n              >Message is required!\n            </mat-error>\n              </mat-form-field>\n            </div>\n            <small class=\"bold\" *ngIf=\"showMessage\">Message Submitted, An Agent will Contact You Soon!</small>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n                <button [disabled]=\"!bookingForm.valid\" [mat-dialog-close]=\"bookingForm.value\" (click)=\"sendEmail(bookingForm)\" class=\"greenBackground whiteColor\" mat-raised-button>Send Message</button>\n            </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { CommonService } from '../services/common.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n  bookingForm: FormGroup;\n  showMessage: boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private common: CommonService,\n    private snackbar: MatSnackBar,\n    public router: Router\n  ) {\n    this.createBookingForm()\n   }\n\n  ngOnInit(): void {\n  }\n\n  createBookingForm() {\n    this.bookingForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      phone: [''],\n      email: [''],\n      message: [''],\n    });\n    return this.bookingForm;\n  }\n\n  sendEmail(form) {\n      this.api\n        .sendContactEmail('bookings/sendEmail', form.value)\n        .subscribe(\n          (res) => {\n            console.log(res);\n            this.showMessage = true;\n            setTimeout(()=> {\n              window.location.reload();\n            }, 5000);\n          },\n          (err) => {\n            this.showMessage = false;\n            this.snackbar.open('Error Sending Message', 'Dismiss', {duration: 2500});\n          }\n        );\n    }\n  }\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ViewChild,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  AfterContentChecked,\r\n} from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../services/api.service';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AddEditPrescriptionComponent } from '../add-edit-prescription/add-edit-prescription.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CommonService } from '../services/common.service';\r\nimport { ConfirmActionComponent } from '../confirm-action/confirm-action.component';\r\n\r\n@Component({\r\n  selector: 'app-prescriptions',\r\n  templateUrl: './prescriptions.component.html',\r\n  styleUrls: ['./prescriptions.component.scss'],\r\n})\r\nexport class PrescriptionsComponent\r\n  implements OnInit, AfterViewInit, AfterContentChecked\r\n{\r\n  spinner: boolean = false;\r\n  color: ThemePalette = 'primary';\r\n  mode: ProgressSpinnerMode = 'indeterminate';\r\n  rewards: any[] = [];\r\n  showTitle: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private snackbar: MatSnackBar,\r\n    private ref: ChangeDetectorRef,\r\n    private api: ApiService,\r\n    private common: CommonService\r\n  ) {\r\n    if(!this.common.getAgent()){\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getRewardsFromAPI();\r\n  }\r\n  ngAfterContentChecked() {\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  deleteRewardFromDB(obj) {\r\n    this.dialog.open(ConfirmActionComponent, {data: 'Delete this Reward?'}).afterClosed().subscribe(res => {\r\n      if(res){\r\n        this.api\r\n        .deleteReward('rewards/deleteReward/' + obj._id, { _id: obj._id })\r\n        .subscribe(\r\n          (res) => {\r\n            if(res){\r\n              this.getRewardsFromAPI();\r\n            }\r\n            this.snackbar.open(res.msg, 'Dismiss', {\r\n              duration: 5000,\r\n              panelClass: ['greenBackground', 'whiteColor'],\r\n            });\r\n          },\r\n          (err) => {\r\n            this.snackbar.open(err.error, 'Dismiss', {\r\n              duration: 3000,\r\n              panelClass: ['redBackground', 'whiteColor'],\r\n            });\r\n          }\r\n        );\r\n      } else{\r\n        this.snackbar.open('Deletion cancelled', 'Okay', {\r\n          duration: 3000,\r\n          panelClass: ['redBackground', 'whiteColor'],\r\n        });\r\n      }\r\n    })\r\n  }\r\n  editPrescription(reward){\r\n    reward.title = 'Edit Reward';\r\n    reward.patch = true;\r\n    this.dialog.open(AddEditPrescriptionComponent, {\r\n      data: reward, disableClose: true\r\n    }).afterClosed().subscribe(res => {\r\n      if(res){\r\n        res._id = reward._id;\r\n      this.updateRewardFromAPI(res);\r\n      }\r\n    })\r\n}\r\n\r\nupdateRewardFromAPI(updatedReward) {\r\n  this.api\r\n    .updatePrescription(\r\n      'rewards/updateReward/' + updatedReward._id,\r\n      updatedReward\r\n    )\r\n    .subscribe(\r\n      (response) => {\r\n        this.snackbar.open(response.msg, 'Dismiss', {\r\n          duration: 3000, panelClass: ['greenBackground', 'whiteColor']\r\n        })\r\n        this.getRewardsFromAPI();\r\n      },\r\n      (err) => {\r\n        this.snackbar.open(err.error, 'Dismiss', {\r\n          duration: 3000, panelClass: ['redBackground', 'whiteColor']\r\n        })\r\n      }\r\n    );\r\n}\r\n  getRewardsFromAPI() {\r\n    this.spinner = true;\r\n    this.api.getRewards('rewards/getRewards', {}).subscribe(\r\n      (res) => {\r\n        this.spinner = false;\r\n        this.rewards = res.rewards;\r\n        if (this.rewards.length) {\r\n          if (!this.router.url.includes('addPrescription')) {\r\n            this.snackbar.open(res.msg, 'Dismiss', {\r\n              duration: 3000,\r\n              panelClass: ['greenBackground', 'whiteColor'],\r\n            });\r\n          }\r\n        } else {\r\n          this.showTitle = true;\r\n          this.snackbar.open('No results found', 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        this.spinner = false;\r\n        this.snackbar.open(err.error, 'Dismiss', {\r\n          duration: 3000,\r\n          panelClass: ['redBackground', 'whiteColor'],\r\n        });\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill>\r\n    <mat-progress-spinner [mode]=\"mode\">\r\n    </mat-progress-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n    <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <h1 class=\"bold\">Rewards</h1>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                <mat-card>\r\n                    <mat-card-content class=\"cardHeight\">\r\n                        <div class=\"padding10px\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center end\">\r\n                                <button routerLink=\"newReward\" mat-raised-button class=\"primaryBlueBtn whiteColor\"> <mat-icon class=\"font20px\">emoji_events</mat-icon> New Reward</button>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"!rewards?.length\" fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\r\n                            <h1 class=\"bold\">No results found</h1>\r\n                        </div>\r\n                        <div class=\"padding20px\" *ngIf=\"rewards?.length > 0\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" >\r\n                          <mat-card class=\"padding20px rewards-card m-2\" *ngFor=\"let reward of rewards; let  i = index;\" fxFlex=\"30\">\r\n                            <mat-card-content>\r\n                              <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                                <h2><span class=\"bold\"> Rewarded to</span>: {{ reward.referrer }}</h2>\r\n                                <h3><span class=\"bold\"> Referred</span>: {{ reward.friend }}</h3>\r\n                                <h3><span class=\"bold\"> Referred on</span>: {{ reward.dateOfReferral | date }}</h3>\r\n                                <h3><span class=\"bold\"> Booked for</span>: {{ reward.dateOfBooking | date }}</h3>\r\n                                <h3><span class=\"bold\"> Redeemed Status</span>: {{ reward.redeemedStatus === true ? 'Redeemed' : 'Not Redeemed' }}</h3>\r\n                              </div>\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\" fxLayoutGap=\"1rem\" class=\"mt-2\">\r\n                          <button (click)=\"editPrescription(reward)\" mat-raised-button class=\"primaryBlueBtn whiteColor\"> <mat-icon class=\"font20px\">edit</mat-icon> Edit </button>\r\n                          <button (click)=\"deleteRewardFromDB(reward)\" mat-raised-button class=\"redBackground whiteColor\"> <mat-icon class=\"font20px\">delete</mat-icon> Delete</button>\r\n                        </div>\r\n                            </mat-card-content>\r\n                          </mat-card>\r\n                      </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {\r\n  startOfDay,\r\n  endOfDay,\r\n  subDays,\r\n  addDays,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  addHours,\r\n  parseISO,\r\n} from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from '../services/api.service';\r\nimport { CommonService } from '../services/common.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {\r\n  CalendarEvent,\r\n  CalendarEventAction,\r\n  CalendarEventTimesChangedEvent,\r\n  CalendarView,\r\n} from 'angular-calendar';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\nimport { AfterViewInit } from '@angular/core';\r\nimport { ConfirmActionComponent } from '../confirm-action/confirm-action.component';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-appointments',\r\n  templateUrl: './appointments.component.html',\r\n  styleUrls: ['./appointments.component.scss'],\r\n})\r\nexport class AppointmentsComponent implements OnInit, AfterViewInit {\r\n  spinner: boolean = false;\r\n  mode: ProgressSpinnerMode = 'indeterminate';\r\n  minDate: Date = new Date();\r\n  minDateEnd: Date = new Date();\r\n  minDateEdit = new Date();\r\n  maxDateEdit = new Date();\r\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\r\n  @ViewChild('dialogContent', { static: true }) dialogContent: TemplateRef<any>;\r\n  @ViewChild('editDialogContent', { static: true })\r\n  editDialogContent: TemplateRef<any>;\r\n  @ViewChild('appointmentForm') appointmentForm;\r\n  @ViewChild('x') x: any;\r\n\r\n  patients: any[] = [];\r\n  appointment = {\r\n    start: null,\r\n    end: null,\r\n    patient: null,\r\n    title: '',\r\n    primaryColor: '#059bd7',\r\n    allDay: true,\r\n    resizable: {\r\n      beforeStart: true,\r\n      afterEnd: true,\r\n    },\r\n    draggable: false,\r\n  };\r\n\r\n  dataForm = {\r\n    start: null,\r\n    end: null,\r\n    patient: null,\r\n    primaryColor: '#059bd7',\r\n    resizable: {\r\n      beforeStart: true,\r\n      afterEnd: true,\r\n    },\r\n    draggable: false,\r\n  };\r\n\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n\r\n  viewDate: Date = new Date();\r\n\r\n  modalData: {\r\n    action: string;\r\n    event: any;\r\n  };\r\n\r\n  actions = [\r\n    {\r\n      onClick: ({ event }: { event }): void => {\r\n        this.handleEvent('Edited', event);\r\n      },\r\n    },\r\n    {\r\n      onClick: ({ event }: { event }): void => {\r\n        this.events = this.events.filter((iEvent) => iEvent !== event);\r\n        this.handleEvent('Deleted', event);\r\n      },\r\n    },\r\n  ];\r\n\r\n  refresh: Subject<any> = new Subject();\r\n\r\n  events: any[] = [];\r\n\r\n  activeDayIsOpen: boolean = false;\r\n  editAppointment: boolean = false;\r\n  appointments: any[] = [];\r\n  commonDates: any[] = [];\r\n  sameDayColor: string = '';\r\n  showAddDialog: boolean = false;\r\n  constructor(\r\n    private modal: NgbModal,\r\n    private dialog: MatDialog,\r\n    private api: ApiService,\r\n    private common: CommonService,\r\n    private snackbar: MatSnackBar,\r\n    private router: Router\r\n  ) {\r\n    if(!this.common.getAgent()){\r\n      this.router.navigate(['login']);\r\n    }\r\n    this.getAppointmentsFromAPI();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.minDateEnd.setMinutes(this.minDateEnd.getMinutes() + 30);\r\n  }\r\n  ngAfterViewInit() {}\r\n  clickedInput() {\r\n    console.log('Clicked input');\r\n  }\r\n  dayClicked({ date, events }: { date: Date; events: any }): void {\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n      this.viewDate = date;\r\n    }\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd,\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    this.events = this.events.map((iEvent) => {\r\n      if (iEvent === event) {\r\n        return {\r\n          ...event,\r\n          start: newStart,\r\n          end: newEnd,\r\n        };\r\n      }\r\n      return iEvent;\r\n    });\r\n    this.handleEvent('Dropped or resized', event);\r\n  }\r\n\r\n  handleEvent(action: string, event: any, x?): any {\r\n    this.modalData = { event, action };\r\n    this.minDateEdit.setMinutes(event.start.getMinutes() - 1);\r\n    this.maxDateEdit.setMinutes(event.end.getMinutes() - 1);\r\n    console.log(this.minDateEdit);\r\n    this.getPatientFromAPI(event.patient.idNumber);\r\n    this.dialog\r\n      .open(this.editDialogContent, { data: event, disableClose: true })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res.msg === 'undefined') {\r\n          this.deleteSelectedAppointment(res._id);\r\n        } else if (res.msg === 'closed') {\r\n          this.refreshComponent();\r\n        } else {\r\n          res._id = event._id;\r\n          (res.draggable = false),\r\n            (res.resizable = {\r\n              beforeStart: true,\r\n              afterEnd: true,\r\n            }),\r\n            (res.doctor = this.common.getAgent().userDetails.username);\r\n          console.log(res);\r\n          this.updateSelectedAppointment(res);\r\n        }\r\n      });\r\n  }\r\n\r\n  validateForm() {\r\n    if (this.appointmentForm.status == 'INVALID') {\r\n      this.snackbar.open('Please insert all fields', 'Close', {\r\n        duration: 2500,\r\n        panelClass: ['redBackground', 'whiteColor'],\r\n      });\r\n    }\r\n  }\r\n\r\n  openAddAppointmentDialog(): void {\r\n    this.showAddDialog = true;\r\n    this.dialog\r\n      .open(this.dialogContent, { disableClose: true })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        if (res.msg == 'closed') {\r\n          this.showAddDialog = false;\r\n          console.log(this.showAddDialog);\r\n          return false;\r\n        } else {\r\n          let newAppointment = {\r\n            title: res.title,\r\n            start: res.start,\r\n            end: res.end,\r\n            patient: res.patient,\r\n            primaryColor: this.appointment.primaryColor,\r\n            draggable: false,\r\n            resizable: {\r\n              beforeStart: true,\r\n              afterEnd: true,\r\n            },\r\n            doctor: this.common.getAgent().userDetails.username,\r\n          };\r\n          this.showAddDialog = false;\r\n          this.saveAppointmentInDB(newAppointment);\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteEvent(eventToDelete: CalendarEvent) {\r\n    this.events = this.events.filter((event) => event !== eventToDelete);\r\n  }\r\n\r\n  setView(view: any) {\r\n    this.view = view;\r\n  }\r\n\r\n  closeOpenMonthViewDay() {\r\n    this.activeDayIsOpen = false;\r\n  }\r\n\r\n  getAppointmentsFromAPI() {\r\n    // this.spinner = true;\r\n    this.api\r\n      .getAppointments('appointments/getAppointments', {\r\n        doctor: this.common.getAgent().userDetails.username,\r\n      })\r\n      .subscribe((res) => {\r\n        this.spinner = false;\r\n        if (res.length) {\r\n          let allAppointments = res.map((appointment) => {\r\n            return {\r\n              _id: appointment._id,\r\n              title: appointment.title,\r\n              start: parseISO(appointment.start),\r\n              end: parseISO(appointment.end),\r\n              patient: appointment.patient,\r\n              primaryColor: appointment.primaryColor,\r\n              draggable: false,\r\n              resizable: {\r\n                beforeStart: true,\r\n                afterEnd: true,\r\n              },\r\n            };\r\n          });\r\n          this.events = [...allAppointments];\r\n        } else {\r\n          // this.snackbar.open()\r\n          this.spinner = false;\r\n\r\n          console.log('No result fetching appointments');\r\n        }\r\n      });\r\n  }\r\n\r\n  getPatientFromAPI(idNumber) {\r\n    if (idNumber && idNumber.length === 13) {\r\n      this.api\r\n        .getAgent('patients/getPatient', {\r\n          'personalDetails.idNumber': idNumber,\r\n        })\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.patients = response.patient;\r\n            console.log(this.patients);\r\n            this.snackbar.open(response.msg, 'Close', {\r\n              duration: 2500,\r\n              panelClass: ['greenBackground', 'whiteColor'],\r\n            });\r\n          } else {\r\n            this.snackbar.open(\r\n              'Patient with that ID number not found',\r\n              'Dismiss',\r\n              {\r\n                duration: 3000,\r\n                panelClass: ['redBackground', 'whiteColor'],\r\n              }\r\n            );\r\n          }\r\n        }),\r\n        (err) => {\r\n          console.log(err.msg);\r\n        };\r\n    }\r\n  }\r\n\r\n  saveAppointmentInDB(newAppointment) {\r\n    this.spinner = true;\r\n    this.api\r\n      .addAppointment('appointments/addAppointment', newAppointment)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner = false;\r\n          if (res) {\r\n            this.snackbar.open(\r\n              `Appointment with ${newAppointment.patient.firstName} made successfuly`,\r\n              'Close',\r\n              {\r\n                duration: 2500,\r\n                panelClass: ['greenBackground', 'whiteColor'],\r\n              }\r\n            );\r\n            setTimeout(() => {\r\n              this.refreshComponent();\r\n            }, 1500);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.spinner = false;\r\n          this.refreshComponent();\r\n          this.snackbar.open(err.error, 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  updateSelectedAppointment(appointmentToUpdate) {\r\n    this.api\r\n      .updateAppointment(\r\n        `appointments/updateAppointment/${appointmentToUpdate._id}`,\r\n        appointmentToUpdate\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          if (res) {\r\n            this.snackbar.open(res.msg, 'Close', {\r\n              duration: 5000,\r\n              panelClass: ['greenBackground', 'whiteColor'],\r\n            });\r\n            setTimeout(() => {\r\n              this.refreshComponent();\r\n            }, 1500);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.refreshComponent();\r\n          this.snackbar.open(err.msg, 'Close', {\r\n            duration: 5000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteSelectedAppointment(appointmentToDelete) {\r\n    this.dialog\r\n      .open(ConfirmActionComponent, {\r\n        data: 'Delete this appointment?',\r\n        disableClose: true,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((result) => {\r\n        if (result) {\r\n          this.api\r\n            .deleteAppointment(\r\n              `appointments/deleteAppointment/${appointmentToDelete}`,\r\n              appointmentToDelete\r\n            )\r\n            .subscribe(\r\n              (res) => {\r\n                if (res) {\r\n                  this.snackbar.open(res.msg, 'Close', {\r\n                    duration: 5000,\r\n                    panelClass: ['greenBackground', 'whiteColor'],\r\n                  });\r\n                }\r\n              },\r\n              (err) => {\r\n                this.refreshComponent();\r\n                this.snackbar.open(err.msg, 'Close', {\r\n                  duration: 5000,\r\n                  panelClass: ['redBackground', 'whiteColor'],\r\n                });\r\n              }\r\n            );\r\n        } else {\r\n          this.refreshComponent();\r\n        }\r\n      });\r\n  }\r\n\r\n  refreshComponent(): void {\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div class=\"spinner\" *ngIf=\"spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill>\r\n    <mat-progress-spinner [mode]=\"mode\">\r\n    </mat-progress-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n    <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n            <h1 class=\"bold\">Appointments</h1>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                <mat-card>\r\n                    <mat-card-content class=\"appointments-card-height padding10px\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center end\">\r\n                                <button (click)=\"openAddAppointmentDialog()\" mat-raised-button class=\"primaryBlueBtn whiteColor\"> <mat-icon class=\"font20px\">book_online</mat-icon> Create Appointment</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row text-center mt-2\">\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"btn-group\">\r\n                                    <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                                        Previous\r\n                                    </div>\r\n                                    <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\">\r\n                                        Today\r\n                                    </div>\r\n                                    <div class=\"btn btn-primary\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                                        Next\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <h3 class=\"today bold font20px\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"btn-group\">\r\n                                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month)\" [class.active]=\"view === CalendarView.Month\">\r\n                                        Month\r\n                                    </div>\r\n                                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Week)\" [class.active]=\"view === CalendarView.Week\">\r\n                                        Week\r\n                                    </div>\r\n                                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Day)\" [class.active]=\"view === CalendarView.Day\">\r\n                                        Day\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div [ngSwitch]=\"view\">\r\n                            <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\" (eventClicked)=\"handleEvent('Clicked', $event.event, $event)\"\r\n                                (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n                            </mwl-calendar-month-view>\r\n                            <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event, $event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n                            </mwl-calendar-week-view>\r\n                            <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event, $event)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\r\n                            </mwl-calendar-day-view>\r\n                        </div>\r\n\r\n                        <ng-template [ngIf]=\"!editAppointment && showAddDialog\" #dialogContent>\r\n                            <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                <form #appointmentForm=\"ngForm\">\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>Appointment Title</mat-label>\r\n                                            <input required matInput #appointment.title placeholder=\"Enter Appointment Title\" name=\"title\" type=\"text\" [(ngModel)]=\"appointment.title\" />\r\n                                            <mat-error *ngIf=\"appointmentForm.controls.title?.touched && appointmentForm.controls.title.errors?.required\">Appointment title is required!\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                        <div fxLayout=\"row\" style=\"width: 180px;\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"0.1em\">\r\n\r\n                                            <span style=\"color: rgb(121, 116, 116) !important\">Colour Code:</span> <input required #appointment.primaryColor disabled name=\"primaryColor\" type=\"color\" [(ngModel)]=\"appointment.primaryColor\" (change)=\"refresh.next()\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\">\r\n                                        <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>Start Date & Time</mat-label>\r\n                                            <input required matInput #appointment.start name=\"start\" [(minDate)]=\"minDate\" class=\"pointer flat-pickr-input\" type=\"text\" mwlFlatpickr [(ngModel)]=\"appointment.start\" (ngModelChange)=\"refresh.next()\" [altInput]=\"true\" [convertModelValue]=\"true\" [enableTime]=\"true\"\r\n                                                dateFormat=\"Y-m-dTH:i\" altFormat=\"F j, Y H:i\" placeholder=\"Start Date & Time\" />\r\n                                            <mat-error *ngIf=\"appointmentForm.controls.start?.touched && appointmentForm.controls.start.errors?.required\">Start Date & time is required!\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>End Date & Time</mat-label>\r\n                                            <input required matInput class=\"pointer flat-pickr-input\" [(minDate)]=\"minDateEnd\" matInput #appointment.end name=\"end\" type=\"text\" mwlFlatpickr [(ngModel)]=\"appointment.end\" (ngModelChange)=\"refresh.next()\" [altInput]=\"true\" [convertModelValue]=\"true\"\r\n                                                [enableTime]=\"true\" dateFormat=\"Y-m-dTH:i\" altFormat=\"F j, Y H:i\" placeholder=\"End Date & Time\" />\r\n                                            <mat-error *ngIf=\"appointmentForm.controls.end?.touched && appointmentForm.controls.end.errors?.required\">End Date & time is required!\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\">\r\n                                        <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>Fetch Patient with ID</mat-label>\r\n                                            <input #patientID matInput name=\"patientID\" (keyup)=\"getPatientFromAPI(patientID.value)\" />\r\n                                            <mat-error *ngIf=\"appointmentForm.controls?.patientID?.touched && appointmentForm.controls.patientID.errors?.required\">Patient ID is required!\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-form-field disabled appearance=\"legacy\">\r\n                                            <mat-label>Select Patient</mat-label>\r\n                                            <mat-select name=\"patient\" [(ngModel)]=\"patient\" required>\r\n                                                <mat-option *ngFor=\"let patient of patients\" [value]=\"patient.personalDetails\">{{ patient.personalDetails.firstName + ' ' + patient.personalDetails.lastName }}</mat-option>\r\n                                            </mat-select>\r\n                                            <mat-error *ngIf=\"appointmentForm.controls.patient?.touched && appointmentForm.controls.patient.errors?.required\">Patient name is required!\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n                            <div fxFlexLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.5em\">\r\n                                <button *ngIf=\"appointmentForm.status == 'INVALID'\" (click)=\"validateForm()\" matTooltip=\"Create Appointment\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.5em\" class=\"btn greyBackground\">\r\n                                    <span class=\"whiteColor \">Create</span> <mat-icon class=\"whiteColor \">edit</mat-icon>\r\n                        </button>\r\n\r\n                                <button *ngIf=\"appointmentForm.status == 'VALID'\" [mat-dialog-close]=\"appointmentForm.value\" matTooltip=\"Update Appointment\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.5em\" class=\"btn greenBackground\">\r\n                                        <span class=\"whiteColor \">Save</span> <mat-icon class=\"whiteColor \">save</mat-icon>\r\n                            </button>\r\n\r\n\r\n                                <button [mat-dialog-close]=\"{msg: 'closed'}\" matTooltip=\"Cancel Appointment \" fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"0.5em \" class=\"btn redBackground \">\r\n                                        <span class=\"whiteColor \">Cancel</span> <mat-icon class=\"whiteColor \" >cancel</mat-icon>\r\n                            </button>\r\n                            </div>\r\n                        </ng-template>\r\n                        <ng-template [ngIf]=\"editAppointment\" #editDialogContent let-data>\r\n                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                <h2 class=\"modal-title noMargin\">Edit Appointment</h2>\r\n                                <div [mat-dialog-close]=\"{msg: 'closed'}\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                    <h3 class=\"redColor noMargin bold\">Close</h3>\r\n                                    <mat-icon class=\"redColor bold\">highlight_off</mat-icon>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                <form #dataForm=\"ngForm\">\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>Appointment Title</mat-label>\r\n                                            <input required matInput #data.title placeholder=\"Enter Appointment Title\" name=\"title\" type=\"text\" [(ngModel)]=\"data.title\" />\r\n                                            <mat-error *ngIf=\"dataForm.controls.title?.touched && dataForm.controls.title.errors?.required\">Appointment title is required!\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                        <div fxLayout=\"row\" style=\"width: 180px;\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"0.1em\">\r\n\r\n                                            <span #disabled style=\"color: rgb(121, 116, 116) !important\">Colour Code:</span> <input disabled required #appointment.primaryColor name=\"primaryColor\" type=\"color\" [(ngModel)]=\"appointment.primaryColor\" (change)=\"refresh.next()\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\">\r\n                                        <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>Start Date & Time</mat-label>\r\n                                            <input required matInput #data.start name=\"start\" [(minDate)]=\"minDateEdit\" class=\"pointer flat-pickr-input\" type=\"text\" (ngModelChange)=\"refresh.next()\" mwlFlatpickr [(ngModel)]=\"data.start\" [altInput]=\"true\" [convertModelValue]=\"true\" [enableTime]=\"true\"\r\n                                                dateFormat=\"Y-m-dTH:i\" altFormat=\"F j, Y H:i\" placeholder=\"Start Date & Time\" />\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>End Date & Time</mat-label>\r\n                                            <input required matInput class=\"pointer flat-pickr-input\" [(minDate)]=\"minDateEdit\" matInput #data.end name=\"end\" type=\"text\" mwlFlatpickr [(ngModel)]=\"data.end\" (ngModelChange)=\"refresh.next()\" [altInput]=\"true\" [convertModelValue]=\"true\" [enableTime]=\"true\"\r\n                                                dateFormat=\"Y-m-dTH:i\" altFormat=\"F j, Y H:i\" placeholder=\"End Date & Time\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\">\r\n                                        <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>Fetch Patient with ID</mat-label>\r\n                                            <input disabled [value]=\"patients[0]?.personalDetails.idNumber\" #patientID matInput name=\"patientID\" (ngModelChange)=\"getPatientFromAPI($event)\" />\r\n                                            <mat-error *ngIf=\"dataForm.controls?.patientID?.touched && dataForm.controls.patientID.errors?.required\">Patient ID is required!\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n\r\n                                        <mat-form-field disabled appearance=\"legacy\">\r\n                                            <mat-label>Select Patient</mat-label>\r\n                                            <mat-select name=\"patient\" [(ngModel)]=\"patient\" required>\r\n                                                <mat-option *ngFor=\"let patient of patients\" [value]=\"patient.personalDetails\">{{ patient.personalDetails.firstName + ' ' + patient.personalDetails.lastName }}</mat-option>\r\n                                            </mat-select>\r\n                                            <mat-error *ngIf=\"dataForm.controls.patient?.touched && dataForm.controls.patient.errors?.required\">Patient name is required!\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n                            <div fxFlexLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.5em\">\r\n                                <button *ngIf=\"dataForm.status == 'INVALID'\" (click)=\"validateForm()\" matTooltip=\"Create Appointment\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.5em\" class=\"btn greyBackground\">\r\n                                    <span class=\"whiteColor \">Create</span> <mat-icon class=\"whiteColor \">edit</mat-icon>\r\n                        </button>\r\n                                <button *ngIf=\"dataForm.status == 'VALID' && data.start !== minDate\" [mat-dialog-close]=\"dataForm.value\" matTooltip=\"Save Appointment\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.5em\" class=\"btn greenBackground\">\r\n                                        <span class=\"whiteColor \">Update</span> <mat-icon class=\"whiteColor \">save</mat-icon>\r\n                            </button>\r\n\r\n\r\n                                <button [mat-dialog-close]=\"{_id: data._id, msg: 'undefined'}\" matTooltip=\"Delete Appointment \" fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"0.5em \" class=\"btn redBackground \">\r\n                                        <span class=\"whiteColor \">Delete</span> <mat-icon class=\"whiteColor \" >delete</mat-icon>\r\n                            </button>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\n  AfterViewInit,\n  Component,\n  ViewChild,\n  OnInit,\n  ChangeDetectorRef,\n  AfterContentChecked,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommonService } from '../services/common.service';\nimport { ConfirmActionComponent } from '../confirm-action/confirm-action.component';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AddEditReservationNewComponent } from '../add-edit-reservation-new/add-edit-reservation-new.component';\n@Component({\n  selector: 'app-reservation-new',\n  templateUrl: './reservation-new.component.html',\n  styleUrls: ['./reservation-new.component.scss']\n})\nexport class ReservationNewComponent implements OnInit {\n  spinner: boolean = false;\n  color: ThemePalette = 'primary';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  reservations: any[] = [];\n  showTitle: boolean = false;\n  reservationForm: FormGroup\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  showMessage: boolean = false;\n  constructor(\n    private dialog: MatDialog,\n    private router: Router,\n    private snackbar: MatSnackBar,\n    private ref: ChangeDetectorRef,\n    private api: ApiService,\n    private common: CommonService,\n    private formBuilder: FormBuilder,\n  ) {\n    if(!this.common.getAgent()){\n      this.router.navigate(['login']);\n    }\n    this.createReservationForm();\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnInit(): void {\n    this.getReservationsFromAPI();\n  }\n  ngAfterContentChecked() {\n    this.ref.detectChanges();\n  }\n\n  createReservationForm() {\n    this.reservationForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      phone: [''],\n      noOfAdults: [''],\n      travelingTo: [''],\n      checkInDate: [''],\n      noOfNights: [''],\n    });\n    return this.reservationForm;\n  }\n\n  saveReservation(form){\n    form.value.requestDate = new Date();\n    this.api.addClient('reservations/addReservation', form.value).subscribe(res => {\n        this.snackbar.open(\"Reservation Added Successfully\", 'Dismiss', {\n          duration: 3000,\n          panelClass: ['greenBackground', 'whiteColor'],\n        });\n        this.showMessage = true;\n        setTimeout(() => {\n          window.location.reload();\n        }, 2800);\n      },\n      (err) => {\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      })\n  }\n\n  deleteReservationFromDB(obj) {\n    this.dialog.open(ConfirmActionComponent, {data: 'Delete this Reservation?'}).afterClosed().subscribe(res => {\n      if(res){\n        this.api\n        .deleteReservation('reservations/deleteReservation/' + obj._id, { _id: obj._id })\n        .subscribe(\n          (res) => {\n            if(res){\n              this.getReservationsFromAPI();\n            }\n            this.snackbar.open(res.msg, 'Dismiss', {\n              duration: 5000,\n              panelClass: ['greenBackground', 'whiteColor'],\n            });\n          },\n          (err) => {\n            this.snackbar.open(err.error, 'Dismiss', {\n              duration: 3000,\n              panelClass: ['redBackground', 'whiteColor'],\n            });\n          }\n        );\n      } else{\n        this.snackbar.open('Deletion cancelled', 'Okay', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      }\n    })\n  }\n  editReservation(reservation){\n    reservation.title = 'Edit Reservation';\n    reservation.patch = true;\n    this.dialog.open(AddEditReservationNewComponent, {\n      data: reservation, disableClose: true\n    }).afterClosed().subscribe(res => {\n      if(res){\n        res._id = reservation._id;\n      this.updateReservationFromAPI(res);\n      }\n    })\n}\n\nupdateReservationFromAPI(updatedReservation) {\n  this.api\n    .updatePrescription(\n      'reservations/updateReservation/' + updatedReservation._id,\n      updatedReservation\n    )\n    .subscribe(\n      (response) => {\n        this.snackbar.open(response.msg, 'Dismiss', {\n          duration: 3000, panelClass: ['greenBackground', 'whiteColor']\n        })\n        this.getReservationsFromAPI();\n      },\n      (err) => {\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000, panelClass: ['redBackground', 'whiteColor']\n        })\n      }\n    );\n}\n  getReservationsFromAPI() {\n    this.spinner = true;\n    this.api.getReservations('reservations/getReservations', {}).subscribe(\n      (res) => {\n        this.spinner = false;\n        console.log(res);\n        this.reservations = res.reservations;\n        if (this.reservations.length) {\n          if (!this.router.url.includes('addPrescription')) {\n            this.snackbar.open(res.msg, 'Dismiss', {\n              duration: 3000,\n              panelClass: ['greenBackground', 'whiteColor'],\n            });\n          }\n        } else {\n          this.showTitle = true;\n          this.snackbar.open('No results found', 'Dismiss', {\n            duration: 3000,\n            panelClass: ['redBackground', 'whiteColor'],\n          });\n        }\n      },\n      (err) => {\n        this.spinner = false;\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      }\n    );\n  }\n}\n","<div class=\"spinner\" *ngIf=\"spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill>\n  <mat-progress-spinner [mode]=\"mode\">\n  </mat-progress-spinner>\n</div>\n<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\n  <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n          <h1 class=\"bold\">Reservations</h1>\n      </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n              <mat-card>\n                  <mat-card-content class=\"cardHeight\">\n                      <div class=\"padding10px\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                          <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center end\">\n                              <button routerLink=\"newReservation\" mat-raised-button class=\"primaryBlueBtn whiteColor\"> <mat-icon class=\"font20px\">emoji_events</mat-icon> New Reservation</button>\n                          </div>\n                      </div>\n                      <div *ngIf=\"!reservations?.length\" fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\n                          <h1 class=\"bold\">No results found</h1>\n                      </div>\n                      <div class=\"padding20px\" *ngIf=\"reservations?.length > 0\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" >\n                        <mat-card class=\"padding20px rewards-card m-2\" *ngFor=\"let reservation of reservations; let  i = index;\" fxFlex=\"30\">\n                          <mat-card-content>\n                            <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\n                              <h2><span class=\"bold\"> Reserved by</span>: {{ reservation.firstName  }}</h2>\n                              <h3><span class=\"bold\"> Last name</span>: {{ reservation.lastName }}</h3>\n                              <h3><span class=\"bold\"> Hotel</span>: {{ reservation.hotel }}</h3>\n                              <h3><span class=\"bold\"> Request date</span>: {{ reservation.requestDate | date }}</h3>\n                              <h3><span class=\"bold\"> Phone</span>: {{ reservation.phone }}</h3>\n                              <h3><span class=\"bold\"> Traveling to</span>: {{ reservation.travelingTo }}</h3>\n                              <h3><span class=\"bold\"> Check in date</span>: {{ reservation.checkInDate | date }}</h3>\n                              <h3><span class=\"bold\"> Check out date</span>: {{ reservation.checkOutDate | date }}</h3>\n                              <h3><span class=\"bold\"> No. of adults</span>: {{ reservation.noOfAdults }}</h3>\n                              <h3><span class=\"bold\"> No. of nights</span>: {{ reservation.noOfNights }}</h3>\n                            </div>\n                      <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\" fxLayoutGap=\"1rem\" class=\"mt-2\">\n                        <button (click)=\"editReservation(reservation)\" mat-raised-button class=\"primaryBlueBtn whiteColor\"> <mat-icon class=\"font20px\">edit</mat-icon> Edit </button>\n                        <button (click)=\"deleteReservationFromDB(reservation)\" mat-raised-button class=\"redBackground whiteColor\"> <mat-icon class=\"font20px\">delete</mat-icon> Delete</button>\n                      </div>\n                          </mat-card-content>\n                        </mat-card>\n                    </div>\n                  </mat-card-content>\n              </mat-card>\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  redirectByUrl(){\r\n      this.router.navigateByUrl('login');\r\n  }\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\" fxFill>\r\n    <img src=\"assets/img/notFound.jpg\" alt=\"\">\r\n    <button mat-raised-button (click)=\"redirectByUrl()\">Back To dashboard</button>\r\n</div>","import {\n  AfterViewInit,\n  Component,\n  ViewChild,\n  OnInit,\n  ChangeDetectorRef,\n  AfterContentChecked,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommonService } from '../services/common.service';\nimport { ConfirmActionComponent } from '../confirm-action/confirm-action.component';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AddEditReservationComponent } from '../add-edit-reservation/add-edit-reservation.component';\n@Component({\n  selector: 'app-reservations',\n  templateUrl: './reservations.component.html',\n  styleUrls: ['./reservations.component.scss']\n})\nexport class ReservationsComponent implements OnInit {\n  spinner: boolean = false;\n  color: ThemePalette = 'primary';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  reservations: any[] = [];\n  showTitle: boolean = false;\n  reservationForm: FormGroup\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  showMessage: boolean = false;\n  constructor(\n    private dialog: MatDialog,\n    private router: Router,\n    private snackbar: MatSnackBar,\n    private ref: ChangeDetectorRef,\n    private api: ApiService,\n    private common: CommonService,\n    private formBuilder: FormBuilder,\n  ) {\n    if(!this.common.getAgent()){\n      this.router.navigate(['login']);\n    }\n    this.createReservationForm();\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnInit(): void {\n    this.getReservationsFromAPI();\n  }\n  ngAfterContentChecked() {\n    this.ref.detectChanges();\n  }\n\n  createReservationForm() {\n    this.reservationForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      phone: [''],\n      noOfAdults: [''],\n      travelingTo: [''],\n      checkInDate: [''],\n      noOfNights: [''],\n    });\n    return this.reservationForm;\n  }\n\n  saveBooking(form){\n    form.value.requestDate = new Date();\n    this.api.addClient('bookings/addBooking', form.value).subscribe(res => {\n        this.snackbar.open(\"Booking Added Successfully\", 'Dismiss', {\n          duration: 3000,\n          panelClass: ['greenBackground', 'whiteColor'],\n        });\n        this.showMessage = true;\n        setTimeout(() => {\n          window.location.reload();\n        }, 2800);\n      },\n      (err) => {\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      })\n  }\n\n  deleteReservationFromDB(obj) {\n    this.dialog.open(ConfirmActionComponent, {data: 'Delete this Reservation?'}).afterClosed().subscribe(res => {\n      if(res){\n        this.api\n        .deleteBooking('bookings/deleteBooking/' + obj._id, { _id: obj._id })\n        .subscribe(\n          (res) => {\n            if(res){\n              this.getReservationsFromAPI();\n            }\n            this.snackbar.open(res.msg, 'Dismiss', {\n              duration: 5000,\n              panelClass: ['greenBackground', 'whiteColor'],\n            });\n          },\n          (err) => {\n            this.snackbar.open(err.error, 'Dismiss', {\n              duration: 3000,\n              panelClass: ['redBackground', 'whiteColor'],\n            });\n          }\n        );\n      } else{\n        this.snackbar.open('Deletion cancelled', 'Okay', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      }\n    })\n  }\n  editReservation(reservation){\n    reservation.title = 'Edit Reservation';\n    reservation.patch = true;\n    this.dialog.open(AddEditReservationComponent, {\n      data: reservation, disableClose: true\n    }).afterClosed().subscribe(res => {\n      if(res){\n        res._id = reservation._id;\n      this.updateReservationFromAPI(res);\n      }\n    })\n}\n\nupdateReservationFromAPI(updatedReservation) {\n  this.api\n    .updatePrescription(\n      'bookings/updateBooking/' + updatedReservation._id,\n      updatedReservation\n    )\n    .subscribe(\n      (response) => {\n        this.snackbar.open(response.msg, 'Dismiss', {\n          duration: 3000, panelClass: ['greenBackground', 'whiteColor']\n        })\n        this.getReservationsFromAPI();\n      },\n      (err) => {\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000, panelClass: ['redBackground', 'whiteColor']\n        })\n      }\n    );\n}\n  getReservationsFromAPI() {\n    this.spinner = true;\n    this.api.getBookings('bookings/getBookings', {}).subscribe(\n      (res) => {\n        this.spinner = false;\n        console.log(res);\n        this.reservations = res.bookings;\n        if (this.reservations.length) {\n          if (!this.router.url.includes('addPrescription')) {\n            this.snackbar.open(res.msg, 'Dismiss', {\n              duration: 3000,\n              panelClass: ['greenBackground', 'whiteColor'],\n            });\n          }\n        } else {\n          this.showTitle = true;\n          this.snackbar.open('No results found', 'Dismiss', {\n            duration: 3000,\n            panelClass: ['redBackground', 'whiteColor'],\n          });\n        }\n      },\n      (err) => {\n        this.spinner = false;\n        this.snackbar.open(err.error, 'Dismiss', {\n          duration: 3000,\n          panelClass: ['redBackground', 'whiteColor'],\n        });\n      }\n    );\n  }\n}\n","<div class=\"spinner\" *ngIf=\"spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill>\n  <mat-progress-spinner [mode]=\"mode\">\n  </mat-progress-spinner>\n</div>\n<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\n  <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n          <h1 class=\"bold\">Booking Requests</h1>\n      </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n              <mat-card>\n                  <mat-card-content class=\"cardHeight\">\n                      <div class=\"padding10px\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                          <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center end\">\n                              <button routerLink=\"newReservation\" mat-raised-button class=\"primaryBlueBtn whiteColor\"> <mat-icon class=\"font20px\">emoji_events</mat-icon> New Request</button>\n                          </div>\n                      </div>\n                      <div *ngIf=\"!reservations?.length\" fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\n                          <h1 class=\"bold\">No results found</h1>\n                      </div>\n                      <div class=\"padding20px\" *ngIf=\"reservations?.length > 0\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" >\n                        <mat-card class=\"padding20px rewards-card m-2\" *ngFor=\"let reservation of reservations; let  i = index;\" fxFlex=\"30\">\n                          <mat-card-content>\n                            <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\n                              <h2><span class=\"bold\"> Requested by</span>: {{ reservation.firstName  }}</h2>\n                              <h3><span class=\"bold\"> Last name</span>: {{ reservation.lastName }}</h3>\n                              <h3><span class=\"bold\"> Request date</span>: {{ reservation.requestDate | date }}</h3>\n                              <h3><span class=\"bold\"> Phone</span>: {{ reservation.phone }}</h3>\n                              <h3><span class=\"bold\"> Traveling to</span>: {{ reservation.travelingTo }}</h3>\n                              <h3><span class=\"bold\"> Check in date</span>: {{ reservation.checkInDate | date }}</h3>\n                              <h3><span class=\"bold\"> No. of adults</span>: {{ reservation.noOfAdults }}</h3>\n                              <h3><span class=\"bold\"> No. of nights</span>: {{ reservation.noOfNights }}</h3>\n                            </div>\n                      <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\" fxLayoutGap=\"1rem\" class=\"mt-2\">\n                        <button (click)=\"editReservation(reservation)\" mat-raised-button class=\"primaryBlueBtn whiteColor\"> <mat-icon class=\"font20px\">edit</mat-icon> Edit </button>\n                        <button (click)=\"deleteReservationFromDB(reservation)\" mat-raised-button class=\"redBackground whiteColor\"> <mat-icon class=\"font20px\">delete</mat-icon> Delete</button>\n                      </div>\n                          </mat-card-content>\n                        </mat-card>\n                    </div>\n                  </mat-card-content>\n              </mat-card>\n          </div>\n      </div>\n  </div>\n</div>\n","<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\r\n    <div fxFlex=\"100\" fxFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n        <div class=\"height65px padding20px toolbar\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"pointer\" fxLayoutGap=\"15px\">\r\n                <span class=\"bold whiteColor font20px\"> <img src=\"../../assets/img/Plain Logo.png\" width=\"20%\" alt=\"\">\r\n                </span>\r\n            </div>\r\n            <div fxLayout=\"column\" fxLayoutAlign=\"center flex-end\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\r\n                    <mat-icon matBadge=\"15\" matBadgeColor=\"accent\" class=\"primaryBlue pointer\">notifications</mat-icon>\r\n                    <mat-icon (click)=\"logout()\" class=\"primaryBlue pointer\">power_settings_new</mat-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <mat-drawer-container class=\"sidenavContainer\">\r\n            <mat-drawer fxHide.xs=\"true\" class=\"sidenav primary-background\" #sidenav opened mode=\"side\" disableClose>\r\n                <div class=\"avatar-wrapper relative marginTop1em\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                    <div class=\"avatar\" fxLayoutAlign=\"center center\">\r\n                      <img src=\"../../assets/img/avatar.png\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n                <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                    <label class=\"bold whiteColor \"> {{ agent['firstName'] + ' ' + agent['lastName']}} </label>\r\n                    <label class=\"dim-gray-color font17px \">{{ agent['role']['specialty']}}</label>\r\n                </div>\r\n                <div *ngFor=\"let item of sidenavItems; let i= index \" fxLayout=\"column \" fxLayoutAlign=\"center stretch \">\r\n                    <div [ngClass]=\"(i==0 ) ? 'marginTop1em' : ''\" class=\"sidenavItem whiteColor pointer \" routerLink=\"{{ item.route }}\" routerLinkActive=\"active\" fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"10px \">\r\n                        <mat-icon>{{item.icon}}</mat-icon> <span>{{ item.name }}</span>\r\n                    </div>\r\n                </div>\r\n            </mat-drawer>\r\n            <mat-drawer-content class=\"padding20px \">\r\n                <router-outlet></router-outlet>\r\n            </mat-drawer-content>\r\n        </mat-drawer-container>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../services/api.service';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-container',\r\n  templateUrl: './container.component.html',\r\n  styleUrls: ['./container.component.scss'],\r\n})\r\nexport class ContainerComponent implements OnInit {\r\n  agent: any = {};\r\n  sidenavItems: any[] = [\r\n    {\r\n      icon: 'home',\r\n      name: 'Home',\r\n      class: 'whiteColor',\r\n      route: 'home',\r\n    },\r\n    {\r\n      icon: 'account_circle',\r\n      name: 'Profile',\r\n      class: 'whiteColor',\r\n      route: 'profile',\r\n    },\r\n    {\r\n      icon: 'groups',\r\n      name: 'Clients',\r\n      class: 'whiteColor',\r\n      route: 'clients',\r\n    },\r\n    {\r\n      icon: 'event',\r\n      name: 'Booking Requests',\r\n      class: 'whiteColor',\r\n      route: 'bookingRequests',\r\n    },\r\n    {\r\n      icon: 'apartment',\r\n      name: 'Reservations',\r\n      class: 'whiteColor',\r\n      route: 'reservations',\r\n    },\r\n    {\r\n      icon: 'paid',\r\n      name: 'Invoices',\r\n      class: 'whiteColor',\r\n      route: 'invoices',\r\n    },\r\n    {\r\n      icon: 'emoji_events',\r\n      name: 'Rewards',\r\n      class: 'whiteColor',\r\n      route: 'rewards',\r\n    },\r\n    // {\r\n    //   icon: 'emoji_events',\r\n    //   name: 'Appointments',\r\n    //   class: 'whiteColor',\r\n    //   route: 'appointments',\r\n    // },\r\n  ];\r\n\r\n  constructor(\r\n    private common: CommonService,\r\n    public sanitizer: DomSanitizer,\r\n    private router: Router,\r\n    private api: ApiService,\r\n    private snackbar: MatSnackBar\r\n  ) {\r\n    this.agent = this.common.getAgent();\r\n  }\r\n  ngOnInit(): void {}\r\n  sanitizeImg(img): SafeUrl {\r\n    return this.sanitizer.bypassSecurityTrustUrl(img);\r\n  }\r\n  changeListener($event): void {\r\n    this.readThis($event.target);\r\n  }\r\n\r\n  readThis(inputValue: any): void {\r\n    let file: File = inputValue.files[0];\r\n    let myReader: FileReader = new FileReader();\r\n\r\n    myReader.onloadend = (e) => {\r\n      this.agent.profilePic = myReader.result;\r\n      this.sanitizeImg(this.agent.profilePic);\r\n      this.updateProfilePic(this.agent.profilePic);\r\n    };\r\n    myReader.readAsDataURL(file);\r\n  }\r\n\r\n  updateProfilePic(base64) {\r\n    this.api\r\n      .updateProfilePic('agents/updateProfilePic/' + this.agent._id, {\r\n        profilePic: base64,\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          if (res) {\r\n            this.common.setAgent(res);\r\n            this.snackbar.open(\r\n              'Profile Image Updated Successfully',\r\n              'Dismiss',\r\n              { duration: 3000, panelClass: ['greenBackground', 'whiteColor'] }\r\n            );\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackbar.open('Error Updating Profile Image', 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { AddEditPatientComponent } from './add-edit-patient/add-edit-patient.component';\r\nimport { AddEditPrescriptionComponent } from './add-edit-prescription/add-edit-prescription.component';\r\nimport { AddEditReservationNewComponent } from './add-edit-reservation-new/add-edit-reservation-new.component';\r\nimport { AddEditReservationComponent } from './add-edit-reservation/add-edit-reservation.component';\r\nimport { AppointmentsComponent } from './appointments/appointments.component';\r\nimport { BillingComponent } from './billing/billing.component';\r\nimport { BookComponent } from './book/book.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { ContainerComponent } from './container/container.component';\r\nimport { CreateEditInvoiceComponent } from './create-edit-invoice/create-edit-invoice.component';\r\nimport { DoctorDashboardComponent } from './doctor-dashboard/doctor-dashboard.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { PatientsComponent } from './patients/patients.component';\r\nimport { PrescriptionsComponent } from './prescriptions/prescriptions.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ReservationNewComponent } from './reservation-new/reservation-new.component';\r\nimport { ReservationsComponent } from './reservations/reservations.component';\r\nimport { ReviewsComponent } from './reviews/reviews.component';\r\nimport { RewardsComponent } from './rewards/rewards.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'landing' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'landing', component: LandingComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'book', component: BookComponent },\r\n  { path: 'reviews', component: ReviewsComponent },\r\n  { path: 'contact', component: ContactComponent },\r\n  { path: 'rewards', component: RewardsComponent },\r\n\r\n  {\r\n    path: 'BevindaTravels',\r\n    component: ContainerComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n      { path: 'home', component: DoctorDashboardComponent },\r\n      {\r\n        path: 'reservations',\r\n        children: [\r\n          { path: '', component: ReservationNewComponent},\r\n          { path: 'newReservation', component: AddEditReservationNewComponent },\r\n          { path: 'editReservation', component: AddEditReservationNewComponent },\r\n        ],\r\n      },\r\n      {\r\n        path: 'bookingRequests',\r\n        children: [\r\n          { path: '', component: ReservationsComponent },\r\n          { path: 'newBookingRequest', component: AddEditReservationComponent },\r\n          { path: 'editBookingRequest', component: AddEditReservationComponent },\r\n        ],\r\n      },\r\n      {\r\n        path: 'rewards',\r\n        children: [\r\n          { path: '', component: PrescriptionsComponent },\r\n          { path: 'newReward', component: AddEditPrescriptionComponent },\r\n          { path: 'editReward', component: AddEditPrescriptionComponent },\r\n        ],\r\n      },\r\n      {\r\n        path: 'profile',\r\n        children: [\r\n          { path: '', component: ProfileComponent },\r\n          { path: 'editProfile', component: ProfileComponent },\r\n        ],\r\n      },\r\n      {\r\n        path: 'appointments',\r\n        children: [\r\n          { path: '', component: AppointmentsComponent },\r\n          { path: 'addClient', component: AppointmentsComponent },\r\n          { path: 'editPatient', component: AppointmentsComponent },\r\n        ],\r\n      },\r\n      {\r\n        path: 'clients',\r\n        children: [\r\n          { path: '', component: PatientsComponent },\r\n          { path: 'addClient', component: AddEditPatientComponent },\r\n          { path: 'editClient', component: AddEditPatientComponent },\r\n        ],\r\n      },\r\n      {\r\n        path: 'invoices',\r\n        children: [\r\n          { path: '', component: BillingComponent },\r\n          { path: 'createInvoice', component: CreateEditInvoiceComponent },\r\n          { path: 'viewInvoice', component: CreateEditInvoiceComponent },\r\n          { path: 'editInvoice', component: CreateEditInvoiceComponent },\r\n        ],\r\n      },\r\n      { path: '**', redirectTo: '**' },\r\n    ],\r\n  },\r\n  { path: '**', component: NotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from '../services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  login: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private snackbar: MatSnackBar,\r\n    private router: Router,\r\n    private common: CommonService,\r\n  ) {\r\n    this.createLoginForm();\r\n    this.checkIfLoggedIn();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createLoginForm() {\r\n    this.login = this.formBuilder.group({\r\n      email: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n    });\r\n  }\r\n  submitForm(form) {\r\n    if (form.invalid) {\r\n      return false;\r\n    }\r\n    this.api.loginAgent('agents/login', form.value).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        if (response) {\r\n          localStorage.setItem('agent', JSON.stringify(response))\r\n          this.snackbar.open('Logged in', 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['greenBackground', 'whiteColor'],\r\n          });\r\n          setTimeout(() => {\r\n            this.router.navigate(['BevindaTravels']);\r\n          }, 1500)\r\n        }\r\n      },\r\n      (err) => {\r\n        this.snackbar.open(`${err['error']}`, 'Dismiss', {\r\n          duration: 3000,\r\n          panelClass: ['redBackground', 'whiteColor'],\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  checkIfLoggedIn(){\r\n    if(this.common.getAgent()){\r\n      this.router.navigateByUrl('BevindaTravels/home')\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"bgLogin\" fxFill>\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n        <mat-card class=\"loginCard\">\r\n            <mat-card-content>\r\n                <div class=\"height120px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                  <img width=\"90%\" src=\"../../assets/img/Plain Logo.png\" alt=\"\">\r\n                    <!-- <div fxLayout=\"column\">\r\n                        <mat-icon class=\"whiteColor\">masks</mat-icon>\r\n                    </div>\r\n                    <div fxLayout=\"column\">\r\n                        <h2 class=\"whiteColor\">Doctor Management System</h2>\r\n                    </div> -->\r\n                </div>\r\n\r\n                <form [formGroup]=\"login\" autcomplete=\"off\">\r\n                    <div class=\"cardPadding\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"1.5em\">\r\n\r\n                        <div fxLayout=\"column\">\r\n                            <mat-form-field appearance=\"legacy\">\r\n                                <input autcomplete=\"new-password\" formControlName=\"email\" name=\"email\" autocomplete=\"new-password\" type=\"email\" matInput placeholder=\"Email/Phone\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxLayout=\"column\">\r\n                            <mat-form-field class=\"fullWidth\" appearance=\"legacy\">\r\n                                <input autcomplete=\"new-password\" formControlName=\"password\" name=\"password\" autocomplete=\"new-password\" type=\"password\" matInput placeholder=\"Password\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxLayout=\"column\">\r\n                            <button (click)=\"submitForm(login)\" class=\"primaryBlueBtn\" mat-raised-button>LOGIN</button>\r\n                        </div>\r\n\r\n                        <div class=\"marginTop1em greyColor bold pointer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                            <mat-icon class=\"smallIcon\">lock</mat-icon> Forgot Password?\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ApiService } from '../services/api.service';\r\nimport { CommonService } from '../services/common.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-edit-patient',\r\n  templateUrl: './add-edit-patient.component.html',\r\n  styleUrls: ['./add-edit-patient.component.scss'],\r\n})\r\nexport class AddEditPatientComponent implements OnInit {\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  formSaved: boolean = false;\r\n  agent: any = {};\r\n  foundPatient: boolean = false;\r\n  currentPatientObj: any = {};\r\n  clients: any[] = [];\r\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\r\n  allergies: any[] = [];\r\n  illnesses: any[] = [];\r\n  personalDetails: FormGroup;\r\n  clientAddress: FormGroup;\r\n  clientForm: FormGroup;\r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private common: CommonService,\r\n    private snackbar: MatSnackBar,\r\n    public router: Router\r\n  ) {\r\n    if(!this.common.getAgent()){\r\n      this.router.navigate(['login']);\r\n    }\r\n    this.createClientForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.agent = this.common.getAgent();\r\n    if (this.data) {\r\n      this.patchEditForm();\r\n      console.log(this.data);\r\n    }\r\n  }\r\n\r\n  createClientForm() {\r\n    this.clientForm = this.formBuilder.group({\r\n      personalDetails: this.createPersonalDetailsForm()\r\n    });\r\n  }\r\n  createPersonalDetailsForm() {\r\n    this.personalDetails = this.formBuilder.group({\r\n      firstName: [''],\r\n      lastName: [''],\r\n      clientType: [''],\r\n      dob: [''],\r\n      gender: [''],\r\n      nationality: [''],\r\n      clientAddress: this.createPatientAddressForm(),\r\n    });\r\n    return this.personalDetails;\r\n  }\r\n\r\n  createPatientAddressForm() {\r\n    this.clientAddress = this.formBuilder.group({\r\n      street: [''],\r\n      town: [''],\r\n      code: [''],\r\n      city: [''],\r\n      email: [''],\r\n      phone: [''],\r\n    });\r\n    return this.clientAddress;\r\n  }\r\n\r\n  getClients() {\r\n    this.api.getClient('clients/getClient', {}).subscribe((res) => {\r\n      this.clients = res;\r\n    });\r\n  }\r\n\r\n  async refreshPatient(clientToRefresh) {\r\n    console.log(clientToRefresh);\r\n\r\n    this.api\r\n      .getClient('clients/getPatient', {\r\n        'personalDetails.idNumber': clientToRefresh.personalDetails.idNumber,\r\n      })\r\n      .subscribe((res) => {\r\n        console.log(res, 'From refresh function api');\r\n\r\n        if (res.length) {\r\n          this.currentPatientObj = res[0];\r\n          console.log(this.currentPatientObj, 'curr obj');\r\n        }\r\n      });\r\n  }\r\n\r\n  async getPatientFromAPI(formObj) {\r\n    this.api\r\n      .getClient('clients/getPatient', {\r\n        'personalDetails.idNumber': formObj.personalDetails.idNumber,\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          if (res.length) {\r\n            formObj._id = res[0]._id;\r\n            formObj.healthDetails.agent = this.agent.userDetails.username;\r\n            this.updatePatientFromAPI(formObj);\r\n            console.log('res.length');\r\n            this.foundPatient = true;\r\n            this.refreshPatient(formObj);\r\n            this.getClients();\r\n            return res;\r\n          } else {\r\n            formObj.healthDetails.agent = this.agent.userDetails.username;\r\n            this.snackbar.open(\"Progress Saved Successfully\", 'Dismiss', {\r\n              duration: 3000,\r\n              panelClass: ['greenBackground', 'whiteColor'],\r\n            });\r\n            this.sendPatientToAPI(formObj);\r\n            this.refreshPatient(formObj);\r\n            this.getClients();\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackbar.open(err.error, 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  updatePatientFromAPI(updatedPatient) {\r\n    this.api\r\n      .updateAgent(\r\n        'clients/updatePatient/' + updatedPatient._id,\r\n        updatedPatient\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          this.currentPatientObj = response;\r\n          this.snackbar.open(\"Patient Updated Successfully\", 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['greenBackground', 'whiteColor'],\r\n          });\r\n          this.getClients();\r\n        },\r\n        (err) => {\r\n          this.snackbar.open(err.error, 'Dismiss', {\r\n            duration: 3000,\r\n            panelClass: ['redBackground', 'whiteColor'],\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  saveProgress(newClient) {\r\n    this.api.addClient('clients/addClient', newClient.value).subscribe(res => {\r\n    this.formSaved = true;\r\n      this.snackbar.open(\"Client Added Successfully\", 'Dismiss', {\r\n        duration: 3000,\r\n        panelClass: ['greenBackground', 'whiteColor'],\r\n      });\r\n      this.getClients();\r\n      this.router.navigate(['BevindaTravels/clients']);\r\n    },\r\n    (err) => {\r\n      this.snackbar.open(err.error, 'Dismiss', {\r\n        duration: 3000,\r\n        panelClass: ['redBackground', 'whiteColor'],\r\n      });\r\n    })\r\n  }\r\n\r\n  sendPatientToAPI(newClient) {\r\n    console.log(newClient);\r\n    return;\r\n    // this.api.addAgent('clients/addClient', newPatient).subscribe(\r\n    //   (response) => {\r\n    //     if (response) {\r\n    //       this.snackbar.open(response.msg, 'Dismiss', {\r\n    //         duration: 3000,\r\n    //         panelClass: ['greenBackground', 'whiteColor'],\r\n    //       });\r\n    //       this.currentPatientObj = response;\r\n    //       console.log('Patient saved');\r\n    //       this.getClients();\r\n    //     }\r\n    //   },\r\n    //   (err) => {\r\n    //     this.snackbar.open(err.error, 'Dismiss', {\r\n    //       duration: 3000,\r\n    //       panelClass: ['redBackground', 'whiteColor'],\r\n    //     });\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  // saveHealthDetails(){\r\n\r\n  // }\r\n  patchEditForm() {\r\n    this.clientForm.patchValue({\r\n      personalDetails: this.data.personalDetails,\r\n      healthDetails: this.data.healthDetails,\r\n      nextOfKinDetails: this.data.nextOfKinDetails,\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  patchclientForm() {\r\n    this.clientForm.patchValue({\r\n      personalDetails: this.createPersonalDetailsForm()\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  checkExisitingApplication(idNum) {\r\n    console.log(idNum);\r\n    if (idNum.length === 13) {\r\n      this.api\r\n        .getClient('clients/getPatient', {\r\n          'personalDetails.idNumber': idNum,\r\n        })\r\n        .subscribe(\r\n          (response) => {\r\n            console.log(response);\r\n\r\n            if (response.length) {\r\n              this.currentPatientObj = response[0];\r\n              this.clientForm.patchValue({\r\n                personalDetails: response[0].personalDetails,\r\n                healthDetails: response[0].healthDetails,\r\n                nextOfKinDetails: response[0].nextOfKinDetails,\r\n              });\r\n              this.snackbar.open(\r\n                'Patient details fetched successfully',\r\n                'Dismiss',\r\n                {\r\n                  duration: 3500,\r\n                  panelClass: ['greenBackground', 'whiteColor'],\r\n                }\r\n              );\r\n            } else {\r\n              this.snackbar.open(\r\n                'Patient with that ID does not exist',\r\n                'Dismiss',\r\n                {\r\n                  duration: 3500,\r\n                  panelClass: ['redBackground', 'whiteColor'],\r\n                }\r\n              );\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackbar.open(err.error, 'Dismiss', {\r\n              duration: 3000,\r\n              panelClass: ['redBackground', 'whiteColor'],\r\n            });\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxFill>\r\n    <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"0.5em\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <h1 *ngIf=\"!data?.title\" class=\"bold\">Add client</h1>\r\n                <h1 *ngIf=\"data?.title\" class=\"bold\">Edit client</h1>\r\n                <div mat-dialog-close class=\"pointer\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\r\n                    <h2 *ngIf=\"data?.title || router.url.includes(['home'])\" class=\"bold redColor noMargin\">Cancel </h2>\r\n                    <mat-icon *ngIf=\"(router.url.includes(['home'])) || (router.url.includes(['clients']) && data?.title)\" class=\"redColor\">highlight_off</mat-icon>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                <mat-card>\r\n                    <mat-card-content class=\"stepperHeight\">\r\n                        <div *ngIf=\"!data?.title\" class=\"padding10px\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                                <button routerLink=\"../\" mat-raised-button class=\"primaryBlueBtn whiteColor\">\r\n                                    <mat-icon class=\"font20px\">arrow_back</mat-icon> Back To Clients\r\n                                </button>\r\n                            </div>\r\n                            <div *ngI f=\"false\" fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                <mat-form-field appearance=\"legacy\">\r\n                                    <mat-label>Enter phone number to resume application</mat-label>\r\n                                    <input #input (keyup)=\"checkExisitingApplication(input.value)\" matInput placeholder=\"Enter ID to resume\" required>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <mat-horizontal-stepper [formGroup]=\"clientForm\" linear #stepper>\r\n                            <mat-step [stepControl]=\"personalDetails\" editable>\r\n                                <div [formGroup]=\"personalDetails\">\r\n                                    <ng-template matStepLabel>Personal Details</ng-template>\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <h3 class=\"bold\">Client Details</h3>\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                            <mat-form-field appearance=\"legacy\">\r\n                                                <mat-label>First Name</mat-label>\r\n                                                <input matInput formControlName=\"firstName\" placeholder=\"First name\" required>\r\n                                                <mat-error *ngIf=\"\r\n                                                    clientForm.get('firstName')?.touched &&\r\n                                                    clientForm.get('firstName').hasError('required')\r\n                                                  \"\r\n                                                  >First name is required!\r\n                                                </mat-error>\r\n                                              </mat-form-field>\r\n                                        </div>\r\n                                        <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                            <mat-form-field appearance=\"legacy\">\r\n                                                <mat-label>Last Name</mat-label>\r\n                                                <input matInput formControlName=\"lastName\" placeholder=\"Last name\" required>\r\n                                                <mat-error *ngIf=\"\r\n                                                    clientForm.get('lastName')?.touched &&\r\n                                                    clientForm.get('lastName').hasError('required')\r\n                                                  \"\r\n                                                  >Last name is required!\r\n                                                </mat-error>\r\n                                              </mat-form-field>\r\n                                        </div>\r\n                                        <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                          <mat-form-field appearance=\"legacy\">\r\n                                              <mat-label>Client Type</mat-label>\r\n                                              <mat-select formControlName=\"clientType\" matInput required>\r\n                                                  <mat-option value=\"Corporate\">Corporate</mat-option>\r\n                                                  <mat-option value=\"Private\">Private</mat-option>\r\n                                              </mat-select>\r\n                                              <mat-error *ngIf=\"\r\n                                                    clientForm.get('clientType')?.touched &&\r\n                                                    clientForm.get('clientType').hasError('required')\r\n                                                  \"\r\n                                                  >Client Type is required!\r\n                                                </mat-error>\r\n                                          </mat-form-field>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                          <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>Date of birth</mat-label>\r\n                                            <input readonly formControlName=\"dob\" matInput [matDatepicker]=\"picker\" (click)=\"picker.open()\">\r\n                                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                            <mat-datepicker #picker></mat-datepicker>\r\n                                          </mat-form-field>\r\n\r\n                                        </div>\r\n                                        <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                          <mat-form-field appearance=\"legacy\">\r\n                                            <mat-label>Gender</mat-label>\r\n                                            <mat-select formControlName=\"gender\" matInput required>\r\n                                                <mat-option value=\"Male\">Male</mat-option>\r\n                                                <mat-option value=\"Female\">Female</mat-option>\r\n                                                <mat-option value=\"Other\">Rather not say</mat-option>\r\n                                            </mat-select>\r\n                                            <mat-error *ngIf=\"\r\n                                                  clientForm.get('gender')?.touched &&\r\n                                                  clientForm.get('gender').hasError('required')\r\n                                                \"\r\n                                                >Gender is required!\r\n                                              </mat-error>\r\n                                        </mat-form-field>\r\n                                        </div>\r\n                                        <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                            <mat-form-field appearance=\"legacy\">\r\n                                                <mat-label>Nationality</mat-label>\r\n                                                <input matInput formControlName=\"nationality\" placeholder=\"Nationality\" required>\r\n                                                <mat-error *ngIf=\"\r\n                                                    clientForm.get('nationality')?.touched &&\r\n                                                    clientForm.get('nationality').hasError('required')\r\n                                                  \"\r\n                                                  >Nationality is required!\r\n                                                </mat-error>\r\n                                              </mat-form-field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <h3 class=\"bold\">Address & Contact Details</h3>\r\n                                    </div>\r\n                                    <div fxLayout=\"column\" [formGroup]=\"clientAddress\">\r\n                                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                            <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                                <mat-form-field appearance=\"legacy\">\r\n                                                    <mat-label>Street</mat-label>\r\n                                                    <input matInput formControlName=\"street\" placeholder=\"Street\" required>\r\n                                                    <mat-error *ngIf=\"\r\n                                                    clientForm.get('street')?.touched &&\r\n                                                    clientForm.get('street').hasError('required')\r\n                                                  \"\r\n                                                  >Street is required!\r\n                                                </mat-error>\r\n                                                  </mat-form-field>\r\n                                            </div>\r\n                                            <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                                <mat-form-field appearance=\"legacy\">\r\n                                                    <mat-label>Town</mat-label>\r\n                                                    <input matInput formControlName=\"town\" placeholder=\"Town\" required>\r\n                                                    <mat-error *ngIf=\"\r\n                                                    clientForm.get('town')?.touched &&\r\n                                                    clientForm.get('town').hasError('required')\r\n                                                  \"\r\n                                                  >Town is required!\r\n                                                </mat-error>\r\n                                                  </mat-form-field>\r\n                                            </div>\r\n                                            <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                                <mat-form-field appearance=\"legacy\">\r\n                                                    <mat-label>City</mat-label>\r\n                                                    <input matInput formControlName=\"city\" placeholder=\"City\" required>\r\n                                                    <mat-error *ngIf=\"\r\n                                                    clientForm.get('city')?.touched &&\r\n                                                    clientForm.get('city').hasError('required')\r\n                                                  \"\r\n                                                  >City is required!\r\n                                                </mat-error>\r\n                                                  </mat-form-field>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                            <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                                <mat-form-field appearance=\"legacy\">\r\n                                                    <mat-label>Postal Code</mat-label>\r\n                                                    <input matInput formControlName=\"code\" placeholder=\"Postal Code\" required>\r\n                                                    <mat-error *ngIf=\"\r\n                                                    clientForm.get('code')?.touched &&\r\n                                                    clientForm.get('code').hasError('required')\r\n                                                  \"\r\n                                                  >Postal Code is required!\r\n                                                </mat-error>\r\n                                                  </mat-form-field>\r\n                                            </div>\r\n                                            <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                                <mat-form-field appearance=\"legacy\">\r\n                                                    <mat-label>Email</mat-label>\r\n                                                    <input matInput formControlName=\"email\" placeholder=\"Email\">\r\n                                                  </mat-form-field>\r\n                                            </div>\r\n                                            <div fxFlex=\"30\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n                                                <mat-form-field appearance=\"legacy\">\r\n                                                    <mat-label>Phone</mat-label>\r\n                                                    <input matInput formControlName=\"phone\" placeholder=\"Phone\" required>\r\n                                                    <mat-error *ngIf=\"\r\n                                                    clientForm.get('firstName')?.touched &&\r\n                                                    clientForm.get('firstName').hasError('required')\r\n                                                  \"\r\n                                                  >First name is required!\r\n                                                </mat-error>\r\n                                                  </mat-form-field>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\r\n                                        <button *ngIf=\"!data?.edit\" [disabled]=\"!clientAddress.valid\" [mat-dialog-close]=\"clientForm.value\" (click)=\"saveProgress(clientForm)\" class=\"greenBackground whiteColor\" mat-raised-button>Save New Client</button>\r\n                                        <button *ngIf=\"data?.edit\" [disabled]=\"!clientAddress.valid\" [mat-dialog-close]=\"clientForm.value\" class=\"greenBackground whiteColor\" mat-raised-button>Update Client</button>\r\n                                        <button *ngIf=\"formSaved\" #stepper class=\"primaryBlueBtn whiteColor\" mat-raised-button matStepperNext>Next</button>\r\n                                    </div>\r\n                                </div>\r\n                            </mat-step>\r\n                            <mat-step>\r\n                                <ng-template matStepLabel>Done</ng-template>\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"10px\">\r\n                                    <div fxFlex=\"35\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\r\n                                        <img src=\"assets/img/complete.png\" alt=\"\">\r\n                                    </div>\r\n                                    <div fxFlex=\"38\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\r\n                                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                            <h1 class=\"bold primaryBlue congratsText\">Congratulations\r\n                                                <mat-icon>celebration</mat-icon>\r\n                                            </h1>\r\n                                        </div>\r\n                                        <h3 class=\"greenColor bold\">You have successfully completed the client registration.</h3>\r\n                                        <button *ngIf=\"false\" routerLink=\"../../prescriptions/addPrescription\" mat-raised-button class=\"primaryBlueBtn whiteColor\">Managing Prescriptions</button>\r\n                                        <button *ngIf=\"false\" routerLink=\"../../appointments/createAppointment\" class=\"primaryDarkGreyBtn whiteColor\" mat-raised-button matStepperPrevious>Booking Appointments</button>\r\n                                        <button *ngIf=\"false\" routerLink=\"../../billing/createInvoice\" mat-raised-button class=\"primaryBlueBtn whiteColor\">Billing client</button>\r\n                                    </div>\r\n                                </div>\r\n                            </mat-step>\r\n                        </mat-horizontal-stepper>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}